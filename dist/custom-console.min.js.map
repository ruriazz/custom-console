{"version":3,"file":"custom-console.min.js","sources":["../src/main.js"],"sourcesContent":["import './main.css';\n\nwindow.CustomConsole = () => {\nconst originalLog = console.log;\nconst originalWarn = console.warn;\nconst originalError = console.error;\nconst originalInfo = console.info;\nconst originalDebug = console.debug;\n\nlet logs = [];\nlet isVisible = false;\nlet activeFilters = new Set(['log', 'warn', 'error', 'info', 'debug', 'result']);\nlet searchQuery = '';\nlet commandHistory = [];\nlet historyIndex = -1;\n\nconst toggleBtn = document.createElement('button');\ntoggleBtn.className = 'console-viewer-toggle';\ntoggleBtn.innerHTML = '>_';\ntoggleBtn.title = 'Toggle Console Viewer';\ndocument.body.appendChild(toggleBtn);\n\nconst panel = document.createElement('div');\npanel.className = 'console-viewer-panel hidden';\npanel.innerHTML = `\n        <div class=\"console-viewer-toolbar\">\n            <button class=\"console-viewer-clear\">üóëÔ∏è Clear</button>\n            <div class=\"console-viewer-search\">\n                <input type=\"text\" placeholder=\"üîç Search logs...\">\n            </div>\n            <button class=\"console-viewer-filter log active\" data-type=\"log\">\n                <span class=\"filter-dot\"></span>\n            </button>\n            <button class=\"console-viewer-filter warn active\" data-type=\"warn\">\n                <span class=\"filter-dot\"></span>\n            </button>\n            <button class=\"console-viewer-filter error active\" data-type=\"error\">\n                <span class=\"filter-dot\"></span>\n            </button>\n            <button class=\"console-viewer-filter info active\" data-type=\"info\">\n                <span class=\"filter-dot\"></span>\n            </button>\n            <button class=\"console-viewer-filter debug active\" data-type=\"debug\">\n                <span class=\"filter-dot\"></span>\n            </button>\n            <button class=\"console-viewer-filter result active\" data-type=\"result\">\n                <span class=\"filter-dot\"></span>\n            </button>\n        </div>\n        <div class=\"console-viewer-logs\"></div>\n        <div class=\"console-viewer-prompt\">\n            <div class=\"console-viewer-prompt-header\">\n                <button class=\"console-viewer-prompt-toggle\">‚Üï Toggle</button>\n                <div class=\"console-viewer-prompt-controls\">\n                    <button class=\"console-viewer-run\">‚ñ∂ Run</button>\n                </div>\n            </div>\n            <textarea placeholder=\"‚Ä∫ Execute JavaScript...\" rows=\"1\"></textarea>\n        </div>\n    `;\ndocument.body.appendChild(panel);\n\nconst logsContainer = panel.querySelector('.console-viewer-logs');\nconst clearBtn = panel.querySelector('.console-viewer-clear');\nconst searchInput = panel.querySelector('.console-viewer-search input');\nconst filterBtns = panel.querySelectorAll('.console-viewer-filter');\nconst promptInput = panel.querySelector('.console-viewer-prompt textarea');\nconst runBtn = panel.querySelector('.console-viewer-run');\nconst promptToggle = panel.querySelector('.console-viewer-prompt-toggle');\nconst promptContainer = panel.querySelector('.console-viewer-prompt');\n\ntoggleBtn.addEventListener('click', () => {\n    isVisible = !isVisible;\n    panel.classList.toggle('hidden', !isVisible);\n    if (isVisible) {\n        // Auto resize when panel is opened\n        setTimeout(autoResizeTextarea, 100);\n    }\n});\n\nclearBtn.addEventListener('click', () => {\n    logs = [];\n    renderLogs();\n});\n\nsearchInput.addEventListener('input', (e) => {\n    searchQuery = e.target.value.toLowerCase();\n    renderLogs();\n});\n\nfilterBtns.forEach(btn => {\n    btn.addEventListener('click', () => {\n        const { type } = btn.dataset;\n        if (activeFilters.has(type)) {\n            activeFilters.delete(type);\n            btn.classList.remove('active');\n        } else {\n            activeFilters.add(type);\n            btn.classList.add('active');\n        }\n        renderLogs();\n    });\n});\n\nfunction executeJS(code) {\n    if (!code.trim()) return;\n\n    commandHistory.unshift(code);\n    if (commandHistory.length > 50) commandHistory.pop();\n    historyIndex = -1;\n\n    logs.push({\n        type: 'info',\n        message: `‚Ä∫ ${code}`,\n        time: new Date()\n    });\n\n    try {\n        const result = eval(code);\n        logs.push({\n            type: 'result',\n            message: result !== undefined ? String(result) : 'undefined',\n            time: new Date()\n        });\n    } catch (error) {\n        logs.push({\n            type: 'error',\n            message: `Error: ${error.message}`,\n            time: new Date()\n        });\n    }\n\n    renderLogs();\n}\n\nrunBtn.addEventListener('click', () => {\n    executeJS(promptInput.value);\n    promptInput.value = '';\n    promptInput.style.height = 'auto';\n    autoResizeTextarea();\n});\n\npromptInput.addEventListener('keydown', (e) => {\n    // Prevent context menu on Cmd/Ctrl + A and other keyboard shortcuts\n    if ((e.metaKey || e.ctrlKey) && (e.key === 'a' || e.key === 'c' || e.key === 'v' || e.key === 'x')) {\n        e.stopPropagation();\n    }\n\n    // Cmd/Ctrl + Enter to execute code\n    if ((e.metaKey || e.ctrlKey) && e.key === 'Enter') {\n        e.preventDefault();\n        executeJS(promptInput.value);\n        promptInput.value = '';\n        promptInput.style.height = 'auto';\n        autoResizeTextarea();\n        return;\n    }\n\n    // Shift+Enter for new line (default behavior)\n    // Arrow up/down for history navigation only when not multiline or at edges\n    if (e.key === 'ArrowUp' && !e.shiftKey) {\n        const cursorAtStart = promptInput.selectionStart === 0;\n        if (cursorAtStart && historyIndex < commandHistory.length - 1) {\n            e.preventDefault();\n            historyIndex++;\n            promptInput.value = commandHistory[historyIndex];\n            autoResizeTextarea();\n        }\n    } else if (e.key === 'ArrowDown' && !e.shiftKey) {\n        const cursorAtEnd = promptInput.selectionStart === promptInput.value.length;\n        if (cursorAtEnd) {\n            e.preventDefault();\n            if (historyIndex > 0) {\n                historyIndex--;\n                promptInput.value = commandHistory[historyIndex];\n            } else if (historyIndex === 0) {\n                historyIndex = -1;\n                promptInput.value = '';\n            }\n            autoResizeTextarea();\n        }\n    }\n});\n\n// Prevent context menu from appearing on keyboard shortcuts\npromptInput.addEventListener('contextmenu', (e) => {\n    // Only prevent if it's triggered by keyboard (no mouse position)\n    if (e.clientX === 0 && e.clientY === 0) {\n        e.preventDefault();\n    }\n});\n\nlet isPromptCollapsed = false;\nlet promptInitialHeight = 32;\n\nfunction autoResizeTextarea() {\n    if (!panel.offsetHeight) return; // Panel not visible yet\n\n    const panelHeight = panel.offsetHeight;\n    const maxHeight = Math.floor(panelHeight * 0.7); // 70% of panel height\n    const minHeight = 32;\n    const threshold20Percent = Math.floor(panelHeight * 0.2); // 20% threshold\n\n    // Reset height to calculate scroll height\n    promptInput.style.height = 'auto';\n\n    // Calculate new height\n    let newHeight = Math.max(minHeight, promptInput.scrollHeight);\n\n    // Limit to max height\n    if (newHeight > maxHeight) {\n        newHeight = maxHeight;\n        promptInput.style.overflowY = 'auto';\n    } else {\n        promptInput.style.overflowY = 'hidden';\n    }\n\n    promptInput.style.height = newHeight + 'px';\n\n    // Update max-height dynamically\n    promptInput.style.maxHeight = maxHeight + 'px';\n\n    // Show/hide toggle button based on height\n    if (newHeight > threshold20Percent && !isPromptCollapsed) {\n        promptToggle.classList.add('visible');\n        promptToggle.textContent = '‚Üì Collapse';\n    } else if (isPromptCollapsed) {\n        promptToggle.classList.add('visible');\n        promptToggle.textContent = '‚Üë Expand';\n    } else {\n        promptToggle.classList.remove('visible');\n    }\n}\n\npromptInput.addEventListener('input', autoResizeTextarea);\n\n// Also resize on window resize\nwindow.addEventListener('resize', autoResizeTextarea);\n\npromptToggle.addEventListener('click', () => {\n    isPromptCollapsed = !isPromptCollapsed;\n\n    if (isPromptCollapsed) {\n        promptContainer.classList.add('collapsed');\n        promptToggle.textContent = '‚Üë Expand';\n        promptInput.style.height = promptInitialHeight + 'px';\n    } else {\n        promptContainer.classList.remove('collapsed');\n        promptToggle.textContent = '‚Üì Collapse';\n        autoResizeTextarea();\n    }\n});\n\nfunction addLog(type, args) {\n    const processedArgs = args.map(arg => {\n        if (typeof arg === 'object' && arg !== null) {\n            return formatObject(arg);\n        }\n        return String(arg);\n    });\n\n    logs.push({\n        type,\n        message: processedArgs.join(' '),\n        time: new Date()\n    });\n\n    if (logs.length > 500) {\n        logs.shift();\n    }\n\n    renderLogs();\n}\n\nfunction formatObject(obj, visited = new WeakSet()) {\n    // Handle null dan undefined\n    if (obj === null) return '<span class=\"json-null\">null</span>';\n    if (obj === undefined) return '<span class=\"json-null\">undefined</span>';\n\n    // Handle primitives\n    const type = typeof obj;\n    if (type === 'string') return `<span class=\"json-string\">\"${escapeHtml(obj)}\"</span>`;\n    if (type === 'number') return `<span class=\"json-number\">${obj}</span>`;\n    if (type === 'boolean') return `<span class=\"json-boolean\">${obj}</span>`;\n    if (type === 'symbol') return `<span class=\"json-null\">${obj.toString()}</span>`;\n    if (type === 'bigint') return `<span class=\"json-number\">${obj}n</span>`;\n\n    // Handle functions\n    if (type === 'function') {\n        const funcStr = obj.toString();\n        const preview = funcStr.length > 50 ? funcStr.substring(0, 50) + '...' : funcStr;\n        return `<span class=\"json-null\">∆í ${obj.name || 'anonymous'}() { ${escapeHtml(preview)} }</span>`;\n    }\n\n    // Check circular reference\n    if (visited.has(obj)) {\n        return '<span class=\"json-null\">[Circular Reference]</span>';\n    }\n\n    try {\n        // Add to visited set\n        visited.add(obj);\n\n        // Handle Date\n        if (obj instanceof Date) {\n            return `<span class=\"json-string\">${obj.toISOString()}</span>`;\n        }\n\n        // Handle RegExp\n        if (obj instanceof RegExp) {\n            return `<span class=\"json-string\">${obj.toString()}</span>`;\n        }\n\n        // Handle Error\n        if (obj instanceof Error) {\n            return createJsonDisplay({\n                name: obj.name,\n                message: obj.message,\n                stack: obj.stack\n            }, obj.name);\n        }\n\n        // Handle Map\n        if (obj instanceof Map) {\n            const mapObj = {};\n            let index = 0;\n            obj.forEach((value, key) => {\n                mapObj[`${key} =>`] = value;\n                index++;\n            });\n            return createJsonDisplay(mapObj, `Map(${obj.size})`);\n        }\n\n        // Handle Set\n        if (obj instanceof Set) {\n            const setArray = Array.from(obj);\n            return createJsonDisplay(setArray, `Set(${obj.size})`);\n        }\n\n        // Handle Array\n        if (Array.isArray(obj)) {\n            return createJsonDisplay(obj, `Array(${obj.length})`);\n        }\n\n        // Handle DOM Elements\n        if (typeof Element !== 'undefined' && obj instanceof Element) {\n            const tagName = obj.tagName ? obj.tagName.toLowerCase() : 'element';\n            const id = obj.id ? `#${obj.id}` : '';\n            const classes = obj.className ? `.${obj.className.replace(/\\s+/g, '.')}` : '';\n            return `<span class=\"json-null\">&lt;${tagName}${id}${classes}&gt;</span>`;\n        }\n\n        // Handle other DOM nodes\n        if (typeof Node !== 'undefined' && obj instanceof Node) {\n            return `<span class=\"json-null\">[${obj.constructor.name}]</span>`;\n        }\n\n        // Handle native browser objects yang tidak bisa di-serialize\n        const nativeObjectTypes = [\n            'Window', 'Document', 'HTMLDocument', 'Location', 'Navigator',\n            'Screen', 'History', 'Storage', 'Performance', 'Console',\n            'MediaDevices', 'AudioContext', 'WebGLRenderingContext',\n            'CanvasRenderingContext2D', 'XMLHttpRequest', 'WebSocket'\n        ];\n\n        const constructorName = obj.constructor?.name || '';\n        if (nativeObjectTypes.includes(constructorName) ||\n            constructorName.includes('Element') ||\n            constructorName.includes('HTML') ||\n            constructorName.includes('SVG')) {\n\n            // Extract properties yang bisa diakses\n            const safeProps = extractSafeProperties(obj, visited);\n            return createJsonDisplay(safeProps, constructorName);\n        }\n\n        // Handle ArrayBuffer dan TypedArrays\n        if (obj instanceof ArrayBuffer || ArrayBuffer.isView(obj)) {\n            const typeName = obj.constructor.name;\n            const length = obj.byteLength || obj.length || 0;\n            return `<span class=\"json-null\">${typeName}(${length})</span>`;\n        }\n\n        // Handle Promise\n        if (obj instanceof Promise) {\n            return '<span class=\"json-null\">Promise {&lt;pending&gt;}</span>';\n        }\n\n        // Handle plain objects\n        const safeObj = extractSafeProperties(obj, visited);\n        const objName = constructorName !== 'Object' ? constructorName : null;\n        return createJsonDisplay(safeObj, objName);\n\n    } catch (e) {\n        // Ultimate fallback\n        try {\n            return `<span class=\"json-null\">[${obj.constructor?.name || typeof obj}]</span>`;\n        } catch (e2) {\n            return '<span class=\"json-null\">[Object]</span>';\n        }\n    }\n}\n\nfunction extractSafeProperties(obj, visited = new WeakSet()) {\n    const props = {};\n    const maxProps = 100;\n    let count = 0;\n\n    try {\n        // Get own enumerable properties first\n        for (const prop in obj) {\n            if (count >= maxProps) {\n                props['...'] = `more properties`;\n                break;\n            }\n\n            try {\n                let value = obj[prop];\n\n                if (typeof value === 'function') {\n                    value = `[Function: ${prop}]`;\n                } else if (typeof value === 'object' && value !== null && visited.has(value)) {\n                    value = '[Circular]';\n                }\n\n                props[prop] = value;\n                count++;\n            } catch (e) {\n                props[prop] = `[Error: ${e.message}]`;\n                count++;\n            }\n        }\n\n        // Get own non-enumerable properties\n        const ownProps = Object.getOwnPropertyNames(obj);\n        for (const prop of ownProps) {\n            if (props.hasOwnProperty(prop) || count >= maxProps) continue;\n\n            try {\n                const descriptor = Object.getOwnPropertyDescriptor(obj, prop);\n                if (!descriptor) continue;\n\n                let value;\n                if (descriptor.get || descriptor.set) {\n                    value = '[Getter/Setter]';\n                } else if (typeof descriptor.value === 'function') {\n                    value = `[Function: ${prop}]`;\n                } else {\n                    try {\n                        value = obj[prop];\n                        if (typeof value === 'object' && value !== null && visited.has(value)) {\n                            value = '[Circular]';\n                        }\n                    } catch (e) {\n                        value = `[Error accessing]`;\n                    }\n                }\n\n                props[prop] = value;\n                count++;\n            } catch (e) {\n                // Skip\n            }\n        }\n\n        // Get prototype properties (methods)\n        if (count < maxProps && obj.constructor && obj.constructor.name !== 'Object') {\n            const proto = Object.getPrototypeOf(obj);\n            if (proto && proto !== Object.prototype) {\n                const protoProps = Object.getOwnPropertyNames(proto);\n                for (const prop of protoProps) {\n                    if (props.hasOwnProperty(prop) || count >= maxProps) continue;\n                    if (prop === 'constructor') continue;\n\n                    try {\n                        const descriptor = Object.getOwnPropertyDescriptor(proto, prop);\n                        if (!descriptor) continue;\n\n                        if (typeof descriptor.value === 'function') {\n                            props[prop] = `[Function: ${prop}]`;\n                            count++;\n                        } else if (descriptor.get || descriptor.set) {\n                            props[prop] = '[Getter/Setter]';\n                            count++;\n                        }\n                    } catch (e) {\n                        // Skip\n                    }\n                }\n            }\n        }\n\n    } catch (e) {\n        return { error: e.message };\n    }\n\n    return props;\n}\n\nfunction createJsonDisplay(obj, objectName = null) {\n    const id = 'json_' + Date.now() + '_' + Math.random().toString(36).substr(2, 9);\n    const objId = 'obj_' + id;\n\n    // Store object reference for function execution\n    if (!window.__consoleViewerObjects) {\n        window.__consoleViewerObjects = new Map();\n    }\n    window.__consoleViewerObjects.set(objId, obj);\n\n    // Try to stringify with circular reference handling\n    let jsonString;\n    try {\n        const seen = new WeakSet();\n        jsonString = JSON.stringify(obj, (key, value) => {\n            if (typeof value === 'object' && value !== null) {\n                if (seen.has(value)) {\n                    return '[Circular]';\n                }\n                seen.add(value);\n\n                // Handle special types\n                if (value instanceof Date) return value.toISOString();\n                if (value instanceof RegExp) return value.toString();\n                if (value instanceof Error) return `Error: ${value.message}`;\n                if (typeof value.toString === 'function' &&\n                    value.toString !== Object.prototype.toString &&\n                    !Array.isArray(value)) {\n                    const str = value.toString();\n                    if (str !== '[object Object]') {\n                        return str;\n                    }\n                }\n            }\n            if (typeof value === 'function') {\n                return `[Function: ${value.name || 'anonymous'}]`;\n            }\n            if (typeof value === 'symbol') {\n                return value.toString();\n            }\n            if (typeof value === 'bigint') {\n                return value.toString() + 'n';\n            }\n            if (value === undefined) {\n                return '[undefined]';\n            }\n            return value;\n        }, 2);\n    } catch (e) {\n        jsonString = `\"[Error formatting object: ${e.message}]\"`;\n    }\n\n    const formattedJson = syntaxHighlightJson(jsonString, objId);\n\n    const displayName = objectName || (Array.isArray(obj) ? 'Array' : 'Object');\n    const itemCount = Array.isArray(obj) ? obj.length : Object.keys(obj).length;\n\n    return `<div class=\"json-container\">\n            <div class=\"json-header\" onclick=\"toggleJson('${id}')\">\n                <span class=\"json-toggle\" id=\"toggle_${id}\">‚ñº</span>\n                <span>${displayName}(${itemCount})</span>\n            </div>\n            <div class=\"json-content\" id=\"${id}\" data-obj-id=\"${objId}\">\n                ${formattedJson}\n            </div>\n        </div>`;\n}\n\nfunction syntaxHighlightJson(json, objId) {\n    // sourcery skip: dont-reassign-parameters\n    json = json.replace(/&/g, '&amp;').replace(/</g, '&lt;').replace(/>/g, '&gt;');\n\n    const lines = json.split('\\n');\n    const highlightedLines = lines.map(line => {\n        const leadingSpaces = line.match(/^(\\s*)/)[1];\n        const content = line.trim();\n\n        if (!content) return '';\n\n        // Extract property name for function detection\n        const funcMatch = content.match(/\"([^\"]+)\":\\s*\"\\[Function:\\s*([^\\]]+)\\]\"/);\n\n        const highlighted = content.replace(/(\"(\\\\u[a-zA-Z0-9]{4}|\\\\[^u]|[^\\\\\"])*\"(\\s*:)?|\\b(true|false|null)\\b|-?\\d+(?:\\.\\d*)?(?:[eE][+\\-]?\\d+)?)/g, function (match) {\n            let cls = 'json-number';\n            if (/^\"/.test(match)) {\n                if (/:$/.test(match)) {\n                    cls = 'json-key';\n                } else {\n                    cls = 'json-string';\n                }\n            } else if (/true|false/.test(match)) {\n                cls = 'json-boolean';\n            } else if (/null/.test(match)) {\n                cls = 'json-null';\n            }\n            return '<span class=\"' + cls + '\">' + match + '</span>';\n        }).replace(/([{}[\\],])/g, '<span class=\"json-bracket\">$1</span>');\n\n        // Make functions clickable\n        let finalHighlighted = highlighted;\n        if (funcMatch) {\n            const propName = funcMatch[1];\n            finalHighlighted = highlighted.replace(\n                /\"\\[Function:[^\\]]+\\]\"/g,\n                `<span class=\"json-function\" onclick=\"executeFunction('${objId}', '${propName}', this)\" style=\"cursor: pointer; text-decoration: underline;\">\"[Function: ${propName}]\"</span>`\n            );\n        } else {\n            // Also handle getter/setter\n            finalHighlighted = highlighted.replace(\n                /\"\\[Getter\\/Setter\\]\"/g,\n                '<span class=\"json-null\">\"[Getter/Setter]\"</span>'\n            );\n        }\n\n        const indentHtml = leadingSpaces.replace(/ /g, '&nbsp;');\n\n        return indentHtml + finalHighlighted;\n    });\n\n    return highlightedLines.join('<br>');\n}\n\nwindow.executeFunction = function (objId, propName, element) {\n    try {\n        const obj = window.__consoleViewerObjects.get(objId);\n        if (!obj) {\n            console.error('Object not found');\n            return;\n        }\n\n        const func = obj[propName];\n        if (typeof func !== 'function') {\n            console.error('Property is not a function');\n            return;\n        }\n\n        // Execute function\n        const result = func.call(obj);\n\n        // Format result\n        let resultHtml;\n        if (typeof result === 'object' && result !== null) {\n            resultHtml = formatObject(result);\n        } else {\n            resultHtml = formatObject(result);\n        }\n\n        // Replace function text with result\n        const line = element.parentElement;\n        const keyMatch = line.innerHTML.match(/<span class=\"json-key\">\"([^\"]+)\"<\\/span>/);\n        if (keyMatch) {\n            const key = keyMatch[1];\n            // Create expandable result\n            const resultId = 'result_' + Date.now() + '_' + Math.random().toString(36).substr(2, 9);\n            line.innerHTML = `<span class=\"json-key\">\"${key}\"</span><span class=\"json-bracket\">:</span> ${resultHtml}`;\n        }\n\n    } catch (e) {\n        console.error('Error executing function:', e);\n        element.innerHTML = `<span class=\"json-string\">\"[Error: ${e.message}]\"</span>`;\n    }\n};\n\nfunction renderLogs() {\n    const filtered = logs.filter(log => {\n        const matchesFilter = activeFilters.has(log.type);\n        const matchesSearch = searchQuery === '' ||\n            log.message.toLowerCase().includes(searchQuery);\n        return matchesFilter && matchesSearch;\n    });\n\n    logsContainer.innerHTML = filtered.map(log => `\n            <div class=\"console-log-entry ${log.type}\">\n                ${log.message}\n            </div>\n        `).join('');\n\n    logsContainer.scrollTop = logsContainer.scrollHeight;\n}\n\nconsole.log = function (...args) {\n    originalLog.apply(console, args);\n    addLog('log', args);\n};\n\nconsole.warn = function (...args) {\n    originalWarn.apply(console, args);\n    addLog('warn', args);\n};\n\nconsole.error = function (...args) {\n    originalError.apply(console, args);\n    addLog('error', args);\n};\n\nconsole.info = function (...args) {\n    originalInfo.apply(console, args);\n    addLog('info', args);\n};\n\nconsole.debug = function (...args) {\n    originalDebug.apply(console, args);\n    addLog('debug', args);\n};\n\nconsole.log('üéâ Console Viewer is ready!');\n\n// Initial resize after a short delay to ensure panel is rendered\nsetTimeout(autoResizeTextarea, 100);\n};"],"names":["window","CustomConsole","originalLog","console","log","originalWarn","warn","originalError","error","originalInfo","info","originalDebug","debug","logs","isVisible","activeFilters","Set","searchQuery","commandHistory","historyIndex","toggleBtn","document","createElement","className","innerHTML","title","body","appendChild","panel","logsContainer","querySelector","clearBtn","searchInput","filterBtns","querySelectorAll","promptInput","runBtn","promptToggle","promptContainer","executeJS","code","trim","unshift","length","pop","push","type","message","time","Date","result","eval","undefined","String","renderLogs","addEventListener","classList","toggle","setTimeout","autoResizeTextarea","e","target","value","toLowerCase","forEach","btn","dataset","has","delete","remove","add","style","height","metaKey","ctrlKey","key","stopPropagation","preventDefault","shiftKey","selectionStart","clientX","clientY","isPromptCollapsed","promptInitialHeight","offsetHeight","panelHeight","maxHeight","Math","floor","threshold20Percent","newHeight","max","scrollHeight","overflowY","textContent","addLog","args","processedArgs","map","arg","formatObject","join","shift","obj","visited","WeakSet","escapeHtml","toString","funcStr","preview","substring","name","toISOString","RegExp","Error","createJsonDisplay","stack","Map","mapObj","index","size","Array","from","isArray","Element","tagName","id","replace","Node","constructor","nativeObjectTypes","constructorName","includes","extractSafeProperties","ArrayBuffer","isView","typeName","byteLength","Promise","safeObj","e2","props","maxProps","count","prop","ownProps","Object","getOwnPropertyNames","hasOwnProperty","descriptor","getOwnPropertyDescriptor","get","set","proto","getPrototypeOf","prototype","protoProps","objectName","now","random","substr","objId","jsonString","__consoleViewerObjects","seen","JSON","stringify","str","formattedJson","syntaxHighlightJson","keys","json","split","line","leadingSpaces","match","content","funcMatch","highlighted","cls","test","finalHighlighted","propName","filtered","filter","matchesFilter","matchesSearch","scrollTop","executeFunction","element","func","call","resultHtml","parentElement","keyMatch","apply"],"mappings":"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"}
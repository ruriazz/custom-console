{"version":3,"file":"custom-console.min.js","sources":["../src/main.js"],"sourcesContent":["import './main.css';\n\n// Initialize console interception early and create global buffer\nif (!window.__customConsoleBuffer) {\n    window.__customConsoleBuffer = [];\n    \n    // Store original console methods\n    window.__originalConsole = {\n        log: console.log,\n        warn: console.warn,\n        error: console.error,\n        info: console.info,\n        debug: console.debug\n    };\n    \n    // Intercept console methods immediately\n    const interceptConsole = (type, originalMethod) => {\n        console[type] = function(...args) {\n            // Call original method first\n            originalMethod.apply(console, args);\n            \n            // Add to buffer\n            window.__customConsoleBuffer.push({\n                type,\n                args: args.map(arg => {\n                    // Handle objects that might lose reference\n                    if (typeof arg === 'object' && arg !== null) {\n                        try {\n                            return JSON.parse(JSON.stringify(arg));\n                        } catch (e) {\n                            return String(arg);\n                        }\n                    }\n                    return arg;\n                }),\n                timestamp: Date.now(),\n                time: new Date()\n            });\n            \n            // Limit buffer size\n            if (window.__customConsoleBuffer.length > 1000) {\n                window.__customConsoleBuffer.shift();\n            }\n        };\n    };\n    \n    interceptConsole('log', window.__originalConsole.log);\n    interceptConsole('warn', window.__originalConsole.warn);\n    interceptConsole('error', window.__originalConsole.error);\n    interceptConsole('info', window.__originalConsole.info);\n    interceptConsole('debug', window.__originalConsole.debug);\n}\n\nwindow.CustomConsole = () => {\n    const originalLog = window.__originalConsole.log;\n    const originalWarn = window.__originalConsole.warn;\n    const originalError = window.__originalConsole.error;\n    const originalInfo = window.__originalConsole.info;\n    const originalDebug = window.__originalConsole.debug;\n\n    let logs = [];\n    let isVisible = false;\n    let activeFilters = new Set(['log', 'warn', 'error', 'info', 'debug', 'result']);\n    let searchQuery = '';\n    let commandHistory = [];\n    let historyIndex = -1;\n\n    const toggleBtn = document.createElement('button');\n    toggleBtn.className = 'console-viewer-toggle';\n    toggleBtn.innerHTML = '>_';\n    toggleBtn.title = 'Toggle Console Viewer';\n    document.body.appendChild(toggleBtn);\n\n    const panel = document.createElement('div');\n    panel.className = 'console-viewer-panel hidden';\n    panel.innerHTML = `\n        <div class=\"console-viewer-toolbar\">\n            <button class=\"console-viewer-clear\">üóëÔ∏è Clear</button>\n            <div class=\"console-viewer-search\">\n                <input type=\"text\" placeholder=\"üîç Search logs...\">\n            </div>\n            <button class=\"console-viewer-filter log active\" data-type=\"log\">\n                <span class=\"filter-dot\"></span>\n            </button>\n            <button class=\"console-viewer-filter warn active\" data-type=\"warn\">\n                <span class=\"filter-dot\"></span>\n            </button>\n            <button class=\"console-viewer-filter error active\" data-type=\"error\">\n                <span class=\"filter-dot\"></span>\n            </button>\n            <button class=\"console-viewer-filter info active\" data-type=\"info\">\n                <span class=\"filter-dot\"></span>\n            </button>\n            <button class=\"console-viewer-filter debug active\" data-type=\"debug\">\n                <span class=\"filter-dot\"></span>\n            </button>\n            <button class=\"console-viewer-filter result active\" data-type=\"result\">\n                <span class=\"filter-dot\"></span>\n            </button>\n        </div>\n        <div class=\"console-viewer-logs\"></div>\n        <div class=\"console-viewer-prompt\">\n            <div class=\"console-viewer-prompt-header\">\n                <button class=\"console-viewer-prompt-toggle\">‚Üï Toggle</button>\n                <div class=\"console-viewer-prompt-controls\">\n                    <button class=\"console-viewer-run\">‚ñ∂ Run</button>\n                </div>\n            </div>\n            <textarea placeholder=\"‚Ä∫ Execute JavaScript...\" rows=\"1\"></textarea>\n        </div>\n    `;\n    document.body.appendChild(panel);\n\n    const logsContainer = panel.querySelector('.console-viewer-logs');\n    const clearBtn = panel.querySelector('.console-viewer-clear');\n    const searchInput = panel.querySelector('.console-viewer-search input');\n    const filterBtns = panel.querySelectorAll('.console-viewer-filter');\n    const promptInput = panel.querySelector('.console-viewer-prompt textarea');\n    const runBtn = panel.querySelector('.console-viewer-run');\n    const promptToggle = panel.querySelector('.console-viewer-prompt-toggle');\n    const promptContainer = panel.querySelector('.console-viewer-prompt');\n\n    toggleBtn.addEventListener('click', () => {\n        isVisible = !isVisible;\n        panel.classList.toggle('hidden', !isVisible);\n        if (isVisible) {\n            // Auto resize when panel is opened\n            setTimeout(autoResizeTextarea, 100);\n        }\n    });\n\n    clearBtn.addEventListener('click', () => {\n        logs = [];\n        renderLogs();\n    });\n\n    searchInput.addEventListener('input', (e) => {\n        searchQuery = e.target.value.toLowerCase();\n        renderLogs();\n    });\n\n    filterBtns.forEach(btn => {\n        btn.addEventListener('click', () => {\n            const { type } = btn.dataset;\n            if (activeFilters.has(type)) {\n                activeFilters.delete(type);\n                btn.classList.remove('active');\n            } else {\n                activeFilters.add(type);\n                btn.classList.add('active');\n            }\n            renderLogs();\n        });\n    });\n\n    function executeJS(code) {\n        if (!code.trim()) return;\n\n        commandHistory.unshift(code);\n        if (commandHistory.length > 50) commandHistory.pop();\n        historyIndex = -1;\n\n        logs.push({\n            type: 'info',\n            message: `‚Ä∫ ${code}`,\n            time: new Date()\n        });\n\n        try {\n            const result = eval(code);\n            logs.push({\n                type: 'result',\n                message: result !== undefined ? String(result) : 'undefined',\n                time: new Date()\n            });\n        } catch (error) {\n            logs.push({\n                type: 'error',\n                message: `Error: ${error.message}`,\n                time: new Date()\n            });\n        }\n\n        renderLogs();\n    }\n\n    runBtn.addEventListener('click', () => {\n        executeJS(promptInput.value);\n        promptInput.value = '';\n        promptInput.style.height = 'auto';\n        autoResizeTextarea();\n    });\n\n    promptInput.addEventListener('keydown', (e) => {\n        // Prevent context menu on Cmd/Ctrl + A and other keyboard shortcuts\n        if ((e.metaKey || e.ctrlKey) && (e.key === 'a' || e.key === 'c' || e.key === 'v' || e.key === 'x')) {\n            e.stopPropagation();\n        }\n\n        // Cmd/Ctrl + Enter to execute code\n        if ((e.metaKey || e.ctrlKey) && e.key === 'Enter') {\n            e.preventDefault();\n            executeJS(promptInput.value);\n            promptInput.value = '';\n            promptInput.style.height = 'auto';\n            autoResizeTextarea();\n            return;\n        }\n\n        // Shift+Enter for new line (default behavior)\n        // Arrow up/down for history navigation only when not multiline or at edges\n        if (e.key === 'ArrowUp' && !e.shiftKey) {\n            const cursorAtStart = promptInput.selectionStart === 0;\n            if (cursorAtStart && historyIndex < commandHistory.length - 1) {\n                e.preventDefault();\n                historyIndex++;\n                promptInput.value = commandHistory[historyIndex];\n                autoResizeTextarea();\n            }\n        } else if (e.key === 'ArrowDown' && !e.shiftKey) {\n            const cursorAtEnd = promptInput.selectionStart === promptInput.value.length;\n            if (cursorAtEnd) {\n                e.preventDefault();\n                if (historyIndex > 0) {\n                    historyIndex--;\n                    promptInput.value = commandHistory[historyIndex];\n                } else if (historyIndex === 0) {\n                    historyIndex = -1;\n                    promptInput.value = '';\n                }\n                autoResizeTextarea();\n            }\n        }\n    });\n\n    // Prevent context menu from appearing on keyboard shortcuts\n    promptInput.addEventListener('contextmenu', (e) => {\n        // Only prevent if it's triggered by keyboard (no mouse position)\n        if (e.clientX === 0 && e.clientY === 0) {\n            e.preventDefault();\n        }\n    });\n\n    let isPromptCollapsed = false;\n    let promptInitialHeight = 32;\n\n    function autoResizeTextarea() {\n        if (!panel.offsetHeight) return; // Panel not visible yet\n\n        const panelHeight = panel.offsetHeight;\n        const maxHeight = Math.floor(panelHeight * 0.7); // 70% of panel height\n        const minHeight = 32;\n        const threshold20Percent = Math.floor(panelHeight * 0.2); // 20% threshold\n\n        // Reset height to calculate scroll height\n        promptInput.style.height = 'auto';\n\n        // Calculate new height\n        let newHeight = Math.max(minHeight, promptInput.scrollHeight);\n\n        // Limit to max height\n        if (newHeight > maxHeight) {\n            newHeight = maxHeight;\n            promptInput.style.overflowY = 'auto';\n        } else {\n            promptInput.style.overflowY = 'hidden';\n        }\n\n        promptInput.style.height = newHeight + 'px';\n\n        // Update max-height dynamically\n        promptInput.style.maxHeight = maxHeight + 'px';\n\n        // Show/hide toggle button based on height\n        if (newHeight > threshold20Percent && !isPromptCollapsed) {\n            promptToggle.classList.add('visible');\n            promptToggle.textContent = '‚Üì Collapse';\n        } else if (isPromptCollapsed) {\n            promptToggle.classList.add('visible');\n            promptToggle.textContent = '‚Üë Expand';\n        } else {\n            promptToggle.classList.remove('visible');\n        }\n    }\n\n    promptInput.addEventListener('input', autoResizeTextarea);\n\n    // Also resize on window resize\n    window.addEventListener('resize', autoResizeTextarea);\n\n    // Utility function to escape HTML\n    function escapeHtml(text) {\n        const div = document.createElement('div');\n        div.textContent = text;\n        return div.innerHTML;\n    }\n\n    promptToggle.addEventListener('click', () => {\n        isPromptCollapsed = !isPromptCollapsed;\n\n        if (isPromptCollapsed) {\n            promptContainer.classList.add('collapsed');\n            promptToggle.textContent = '‚Üë Expand';\n            promptInput.style.height = promptInitialHeight + 'px';\n        } else {\n            promptContainer.classList.remove('collapsed');\n            promptToggle.textContent = '‚Üì Collapse';\n            autoResizeTextarea();\n        }\n    });\n\n    function addLog(type, args, timestamp = null) {\n        const processedArgs = args.map(arg => {\n            if (typeof arg === 'object' && arg !== null) {\n                return formatObject(arg);\n            }\n            return String(arg);\n        });\n\n        logs.push({\n            type,\n            message: processedArgs.join(' '),\n            time: timestamp ? new Date(timestamp) : new Date()\n        });\n\n        if (logs.length > 500) {\n            logs.shift();\n        }\n\n        renderLogs();\n    }\n\n    function formatObject(obj, visited = new WeakSet()) {\n        // Handle null dan undefined\n        if (obj === null) return '<span class=\"json-null\">null</span>';\n        if (obj === undefined) return '<span class=\"json-null\">undefined</span>';\n\n        // Handle primitives\n        const type = typeof obj;\n        if (type === 'string') return `<span class=\"json-string\">\"${escapeHtml(obj)}\"</span>`;\n        if (type === 'number') return `<span class=\"json-number\">${obj}</span>`;\n        if (type === 'boolean') return `<span class=\"json-boolean\">${obj}</span>`;\n        if (type === 'symbol') return `<span class=\"json-null\">${obj.toString()}</span>`;\n        if (type === 'bigint') return `<span class=\"json-number\">${obj}n</span>`;\n\n        // Handle functions\n        if (type === 'function') {\n            const funcStr = obj.toString();\n            const preview = funcStr.length > 50 ? funcStr.substring(0, 50) + '...' : funcStr;\n            return `<span class=\"json-null\">∆í ${obj.name || 'anonymous'}() { ${escapeHtml(preview)} }</span>`;\n        }\n\n        // Check circular reference\n        if (visited.has(obj)) {\n            return '<span class=\"json-null\">[Circular Reference]</span>';\n        }\n\n        try {\n            // Add to visited set\n            visited.add(obj);\n\n            // Handle Date\n            if (obj instanceof Date) {\n                return `<span class=\"json-string\">${obj.toISOString()}</span>`;\n            }\n\n            // Handle RegExp\n            if (obj instanceof RegExp) {\n                return `<span class=\"json-string\">${obj.toString()}</span>`;\n            }\n\n            // Handle Error\n            if (obj instanceof Error) {\n                return createJsonDisplay({\n                    name: obj.name,\n                    message: obj.message,\n                    stack: obj.stack\n                }, obj.name);\n            }\n\n            // Handle Map\n            if (obj instanceof Map) {\n                const mapObj = {};\n                let index = 0;\n                obj.forEach((value, key) => {\n                    mapObj[`${key} =>`] = value;\n                    index++;\n                });\n                return createJsonDisplay(mapObj, `Map(${obj.size})`);\n            }\n\n            // Handle Set\n            if (obj instanceof Set) {\n                const setArray = Array.from(obj);\n                return createJsonDisplay(setArray, `Set(${obj.size})`);\n            }\n\n            // Handle Array\n            if (Array.isArray(obj)) {\n                return createJsonDisplay(obj, `Array(${obj.length})`);\n            }\n\n            // Handle DOM Elements\n            if (typeof Element !== 'undefined' && obj instanceof Element) {\n                const tagName = obj.tagName ? obj.tagName.toLowerCase() : 'element';\n                const id = obj.id ? `#${obj.id}` : '';\n                const classes = obj.className ? `.${obj.className.replace(/\\s+/g, '.')}` : '';\n                return `<span class=\"json-null\">&lt;${tagName}${id}${classes}&gt;</span>`;\n            }\n\n            // Handle other DOM nodes\n            if (typeof Node !== 'undefined' && obj instanceof Node) {\n                return `<span class=\"json-null\">[${obj.constructor.name}]</span>`;\n            }\n\n            // Handle native browser objects yang tidak bisa di-serialize\n            const nativeObjectTypes = [\n                'Window', 'Document', 'HTMLDocument', 'Location', 'Navigator',\n                'Screen', 'History', 'Storage', 'Performance', 'Console',\n                'MediaDevices', 'AudioContext', 'WebGLRenderingContext',\n                'CanvasRenderingContext2D', 'XMLHttpRequest', 'WebSocket'\n            ];\n\n            const constructorName = obj.constructor?.name || '';\n            if (nativeObjectTypes.includes(constructorName) ||\n                constructorName.includes('Element') ||\n                constructorName.includes('HTML') ||\n                constructorName.includes('SVG')) {\n\n                // Extract properties yang bisa diakses\n                const safeProps = extractSafeProperties(obj, visited);\n                return createJsonDisplay(safeProps, constructorName);\n            }\n\n            // Handle ArrayBuffer dan TypedArrays\n            if (obj instanceof ArrayBuffer || ArrayBuffer.isView(obj)) {\n                const typeName = obj.constructor.name;\n                const length = obj.byteLength || obj.length || 0;\n                return `<span class=\"json-null\">${typeName}(${length})</span>`;\n            }\n\n            // Handle Promise\n            if (obj instanceof Promise) {\n                return '<span class=\"json-null\">Promise {&lt;pending&gt;}</span>';\n            }\n\n            // Handle plain objects\n            const safeObj = extractSafeProperties(obj, visited);\n            const objName = constructorName !== 'Object' ? constructorName : null;\n            return createJsonDisplay(safeObj, objName);\n\n        } catch (e) {\n            // Ultimate fallback\n            try {\n                return `<span class=\"json-null\">[${obj.constructor?.name || typeof obj}]</span>`;\n            } catch (e2) {\n                return '<span class=\"json-null\">[Object]</span>';\n            }\n        }\n    }\n\n    function extractSafeProperties(obj, visited = new WeakSet()) {\n        const props = {};\n        const maxProps = 100;\n        let count = 0;\n\n        try {\n            // Get own enumerable properties first\n            for (const prop in obj) {\n                if (count >= maxProps) {\n                    props['...'] = `more properties`;\n                    break;\n                }\n\n                try {\n                    let value = obj[prop];\n\n                    if (typeof value === 'function') {\n                        value = `[Function: ${prop}]`;\n                    } else if (typeof value === 'object' && value !== null && visited.has(value)) {\n                        value = '[Circular]';\n                    }\n\n                    props[prop] = value;\n                    count++;\n                } catch (e) {\n                    props[prop] = `[Error: ${e.message}]`;\n                    count++;\n                }\n            }\n\n            // Get own non-enumerable properties\n            const ownProps = Object.getOwnPropertyNames(obj);\n            for (const prop of ownProps) {\n                if (props.hasOwnProperty(prop) || count >= maxProps) continue;\n\n                try {\n                    const descriptor = Object.getOwnPropertyDescriptor(obj, prop);\n                    if (!descriptor) continue;\n\n                    let value;\n                    if (descriptor.get || descriptor.set) {\n                        value = '[Getter/Setter]';\n                    } else if (typeof descriptor.value === 'function') {\n                        value = `[Function: ${prop}]`;\n                    } else {\n                        try {\n                            value = obj[prop];\n                            if (typeof value === 'object' && value !== null && visited.has(value)) {\n                                value = '[Circular]';\n                            }\n                        } catch (e) {\n                            value = `[Error accessing]`;\n                        }\n                    }\n\n                    props[prop] = value;\n                    count++;\n                } catch (e) {\n                    // Skip\n                }\n            }\n\n            // Get prototype properties (methods)\n            if (count < maxProps && obj.constructor && obj.constructor.name !== 'Object') {\n                const proto = Object.getPrototypeOf(obj);\n                if (proto && proto !== Object.prototype) {\n                    const protoProps = Object.getOwnPropertyNames(proto);\n                    for (const prop of protoProps) {\n                        if (props.hasOwnProperty(prop) || count >= maxProps) continue;\n                        if (prop === 'constructor') continue;\n\n                        try {\n                            const descriptor = Object.getOwnPropertyDescriptor(proto, prop);\n                            if (!descriptor) continue;\n\n                            if (typeof descriptor.value === 'function') {\n                                props[prop] = `[Function: ${prop}]`;\n                                count++;\n                            } else if (descriptor.get || descriptor.set) {\n                                props[prop] = '[Getter/Setter]';\n                                count++;\n                            }\n                        } catch (e) {\n                            // Skip\n                        }\n                    }\n                }\n            }\n\n        } catch (e) {\n            return { error: e.message };\n        }\n\n        return props;\n    }\n\n    function createJsonDisplay(obj, objectName = null) {\n        const id = 'json_' + Date.now() + '_' + Math.random().toString(36).substr(2, 9);\n        const objId = 'obj_' + id;\n\n        // Store object reference for function execution\n        if (!window.__consoleViewerObjects) {\n            window.__consoleViewerObjects = new Map();\n        }\n        window.__consoleViewerObjects.set(objId, obj);\n\n        // Try to stringify with circular reference handling\n        let jsonString;\n        try {\n            const seen = new WeakSet();\n            jsonString = JSON.stringify(obj, (key, value) => {\n                if (typeof value === 'object' && value !== null) {\n                    if (seen.has(value)) {\n                        return '[Circular]';\n                    }\n                    seen.add(value);\n\n                    // Handle special types\n                    if (value instanceof Date) return value.toISOString();\n                    if (value instanceof RegExp) return value.toString();\n                    if (value instanceof Error) return `Error: ${value.message}`;\n                    if (typeof value.toString === 'function' &&\n                        value.toString !== Object.prototype.toString &&\n                        !Array.isArray(value)) {\n                        const str = value.toString();\n                        if (str !== '[object Object]') {\n                            return str;\n                        }\n                    }\n                }\n                if (typeof value === 'function') {\n                    return `[Function: ${value.name || 'anonymous'}]`;\n                }\n                if (typeof value === 'symbol') {\n                    return value.toString();\n                }\n                if (typeof value === 'bigint') {\n                    return value.toString() + 'n';\n                }\n                if (value === undefined) {\n                    return '[undefined]';\n                }\n                return value;\n            }, 2);\n        } catch (e) {\n            jsonString = `\"[Error formatting object: ${e.message}]\"`;\n        }\n\n        const formattedJson = syntaxHighlightJson(jsonString, objId);\n\n        const displayName = objectName || (Array.isArray(obj) ? 'Array' : 'Object');\n        const itemCount = Array.isArray(obj) ? obj.length : Object.keys(obj).length;\n\n        return `<div class=\"json-container\">\n            <div class=\"json-header\" onclick=\"toggleJson('${id}')\">\n                <span class=\"json-toggle\" id=\"toggle_${id}\">‚ñº</span>\n                <span>${displayName}(${itemCount})</span>\n            </div>\n            <div class=\"json-content\" id=\"${id}\" data-obj-id=\"${objId}\">\n                ${formattedJson}\n            </div>\n        </div>`;\n    }\n\n    function syntaxHighlightJson(json, objId) {\n        // sourcery skip: dont-reassign-parameters\n        json = json.replace(/&/g, '&amp;').replace(/</g, '&lt;').replace(/>/g, '&gt;');\n\n        const lines = json.split('\\n');\n        const highlightedLines = lines.map(line => {\n            const leadingSpaces = line.match(/^(\\s*)/)[1];\n            const content = line.trim();\n\n            if (!content) return '';\n\n            // Extract property name for function detection\n            const funcMatch = content.match(/\"([^\"]+)\":\\s*\"\\[Function:\\s*([^\\]]+)\\]\"/);\n\n            const highlighted = content.replace(/(\"(\\\\u[a-zA-Z0-9]{4}|\\\\[^u]|[^\\\\\"])*\"(\\s*:)?|\\b(true|false|null)\\b|-?\\d+(?:\\.\\d*)?(?:[eE][+\\-]?\\d+)?)/g, function (match) {\n                let cls = 'json-number';\n                if (/^\"/.test(match)) {\n                    if (/:$/.test(match)) {\n                        cls = 'json-key';\n                    } else {\n                        cls = 'json-string';\n                    }\n                } else if (/true|false/.test(match)) {\n                    cls = 'json-boolean';\n                } else if (/null/.test(match)) {\n                    cls = 'json-null';\n                }\n                return '<span class=\"' + cls + '\">' + match + '</span>';\n            }).replace(/([{}[\\],])/g, '<span class=\"json-bracket\">$1</span>');\n\n            // Make functions clickable\n            let finalHighlighted = highlighted;\n            if (funcMatch) {\n                const propName = funcMatch[1];\n                finalHighlighted = highlighted.replace(\n                    /\"\\[Function:[^\\]]+\\]\"/g,\n                    `<span class=\"json-function\" onclick=\"executeFunction('${objId}', '${propName}', this)\" style=\"cursor: pointer; text-decoration: underline;\">\"[Function: ${propName}]\"</span>`\n                );\n            } else {\n                // Also handle getter/setter\n                finalHighlighted = highlighted.replace(\n                    /\"\\[Getter\\/Setter\\]\"/g,\n                    '<span class=\"json-null\">\"[Getter/Setter]\"</span>'\n                );\n            }\n\n            const indentHtml = leadingSpaces.replace(/ /g, '&nbsp;');\n\n            return indentHtml + finalHighlighted;\n        });\n\n        return highlightedLines.join('<br>');\n    }\n\n    window.executeFunction = function (objId, propName, element) {\n        try {\n            const obj = window.__consoleViewerObjects.get(objId);\n            if (!obj) {\n                console.error('Object not found');\n                return;\n            }\n\n            const func = obj[propName];\n            if (typeof func !== 'function') {\n                console.error('Property is not a function');\n                return;\n            }\n\n            // Execute function\n            const result = func.call(obj);\n\n            // Format result\n            let resultHtml;\n            if (typeof result === 'object' && result !== null) {\n                resultHtml = formatObject(result);\n            } else {\n                resultHtml = formatObject(result);\n            }\n\n            // Replace function text with result\n            const line = element.parentElement;\n            const keyMatch = line.innerHTML.match(/<span class=\"json-key\">\"([^\"]+)\"<\\/span>/);\n            if (keyMatch) {\n                const key = keyMatch[1];\n                // Create expandable result\n                const resultId = 'result_' + Date.now() + '_' + Math.random().toString(36).substr(2, 9);\n                line.innerHTML = `<span class=\"json-key\">\"${key}\"</span><span class=\"json-bracket\">:</span> ${resultHtml}`;\n            }\n\n        } catch (e) {\n            console.error('Error executing function:', e);\n            element.innerHTML = `<span class=\"json-string\">\"[Error: ${e.message}]\"</span>`;\n        }\n    };\n\n    window.toggleJson = function (id) {\n        const content = document.getElementById(id);\n        const toggle = document.getElementById('toggle_' + id);\n        \n        if (content && toggle) {\n            if (content.style.display === 'none') {\n                content.style.display = 'block';\n                toggle.textContent = '‚ñº';\n            } else {\n                content.style.display = 'none';\n                toggle.textContent = '‚ñ∂';\n            }\n        }\n    };\n\n    function renderLogs() {\n        const filtered = logs.filter(log => {\n            const matchesFilter = activeFilters.has(log.type);\n            const matchesSearch = searchQuery === '' ||\n                log.message.toLowerCase().includes(searchQuery);\n            return matchesFilter && matchesSearch;\n        });\n\n        logsContainer.innerHTML = filtered.map(log => {\n            const timestamp = log.time.toLocaleTimeString('en-US', { \n                hour12: false, \n                hour: '2-digit', \n                minute: '2-digit', \n                second: '2-digit',\n                fractionalSecondDigits: 3\n            });\n            \n            return `\n                <div class=\"console-log-entry ${log.type}\">\n                    <span class=\"log-timestamp\">${timestamp}</span>\n                    <span class=\"log-message\">${log.message}</span>\n                </div>\n            `;\n        }).join('');\n\n        logsContainer.scrollTop = logsContainer.scrollHeight;\n    }\n\n    // Load existing console logs from buffer\n    if (window.__customConsoleBuffer && window.__customConsoleBuffer.length > 0) {\n        window.__customConsoleBuffer.forEach(logEntry => {\n            addLog(logEntry.type, logEntry.args, logEntry.timestamp);\n        });\n    }\n\n    // Update console interception to work with our addLog function\n    const updateConsoleInterception = () => {\n        console.log = function (...args) {\n            originalLog.apply(console, args);\n            addLog('log', args);\n        };\n\n        console.warn = function (...args) {\n            originalWarn.apply(console, args);\n            addLog('warn', args);\n        };\n\n        console.error = function (...args) {\n            originalError.apply(console, args);\n            addLog('error', args);\n        };\n\n        console.info = function (...args) {\n            originalInfo.apply(console, args);\n            addLog('info', args);\n        };\n\n        console.debug = function (...args) {\n            originalDebug.apply(console, args);\n            addLog('debug', args);\n        };\n    };\n\n    // Apply the updated console interception\n    updateConsoleInterception();\n\n    console.log('üéâ Console Viewer is ready!');\n\n    // Initial resize after a short delay to ensure panel is rendered\n    setTimeout(autoResizeTextarea, 100);\n};"],"names":["window","__customConsoleBuffer","__originalConsole","log","console","warn","error","info","debug","interceptConsole","type","originalMethod","args","apply","push","map","arg","JSON","parse","stringify","e","String","timestamp","Date","now","time","length","shift","CustomConsole","originalLog","originalWarn","originalError","originalInfo","originalDebug","logs","isVisible","activeFilters","Set","searchQuery","commandHistory","historyIndex","toggleBtn","document","createElement","className","innerHTML","title","body","appendChild","panel","logsContainer","querySelector","clearBtn","searchInput","filterBtns","querySelectorAll","promptInput","runBtn","promptToggle","promptContainer","executeJS","code","trim","unshift","pop","message","result","eval","undefined","renderLogs","addEventListener","classList","toggle","setTimeout","autoResizeTextarea","target","value","toLowerCase","forEach","btn","dataset","has","delete","remove","add","style","height","metaKey","ctrlKey","key","stopPropagation","preventDefault","shiftKey","selectionStart","clientX","clientY","isPromptCollapsed","promptInitialHeight","offsetHeight","panelHeight","maxHeight","Math","floor","threshold20Percent","newHeight","max","scrollHeight","overflowY","textContent","escapeHtml","text","div","addLog","processedArgs","formatObject","join","obj","visited","WeakSet","toString","funcStr","preview","substring","name","toISOString","RegExp","Error","createJsonDisplay","stack","Map","mapObj","index","size","Array","from","isArray","Element","tagName","id","replace","Node","constructor","nativeObjectTypes","constructorName","includes","extractSafeProperties","ArrayBuffer","isView","typeName","byteLength","Promise","safeObj","e2","props","maxProps","count","prop","ownProps","Object","getOwnPropertyNames","hasOwnProperty","descriptor","getOwnPropertyDescriptor","get","set","proto","getPrototypeOf","prototype","protoProps","objectName","random","substr","objId","jsonString","__consoleViewerObjects","seen","str","formattedJson","syntaxHighlightJson","keys","json","split","line","leadingSpaces","match","content","funcMatch","highlighted","cls","test","finalHighlighted","propName","filtered","filter","matchesFilter","matchesSearch","toLocaleTimeString","hour12","hour","minute","second","fractionalSecondDigits","scrollTop","executeFunction","element","func","call","resultHtml","parentElement","keyMatch","toggleJson","getElementById","display","logEntry","updateConsoleInterception"],"mappings":"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"}
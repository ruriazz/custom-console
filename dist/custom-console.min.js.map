{"version":3,"file":"custom-console.min.js","sources":["../src/main.js"],"sourcesContent":["import './main.css';\n\n// Initialize console interception early and create global buffer\n// This code runs immediately when the script is loaded\n(function() {\n    // Check if we're in Tampermonkey environment\n    const isTampermonkey = typeof unsafeWindow !== 'undefined';\n    const targetWindow = isTampermonkey ? unsafeWindow : window;\n    \n    if (!targetWindow.__customConsoleBuffer) {\n        targetWindow.__customConsoleBuffer = [];\n        \n        // Store original console methods from the target window\n        targetWindow.__originalConsole = {\n            log: targetWindow.console.log,\n            warn: targetWindow.console.warn,\n            error: targetWindow.console.error,\n            info: targetWindow.console.info,\n            debug: targetWindow.console.debug\n        };\n        \n        // Intercept console methods immediately on the target window\n        const interceptConsole = (type, originalMethod) => {\n            targetWindow.console[type] = function(...args) {\n                // Call original method first\n                originalMethod.apply(targetWindow.console, args);\n                \n                // Add to buffer\n                targetWindow.__customConsoleBuffer.push({\n                    type,\n                    args: args.map(arg => {\n                        // Handle objects that might lose reference\n                        if (typeof arg === 'object' && arg !== null) {\n                            try {\n                                // Use more robust serialization\n                                return JSON.parse(JSON.stringify(arg, (key, value) => {\n                                    if (typeof value === 'function') {\n                                        return `[Function: ${value.name || 'anonymous'}]`;\n                                    }\n                                    if (value instanceof Error) {\n                                        return `[Error: ${value.message}]`;\n                                    }\n                                    if (value === undefined) {\n                                        return '[undefined]';\n                                    }\n                                    return value;\n                                }));\n                            } catch (e) {\n                                return String(arg);\n                            }\n                        }\n                        return arg;\n                    }),\n                    timestamp: Date.now(),\n                    time: new Date()\n                });\n                \n                // Limit buffer size\n                if (targetWindow.__customConsoleBuffer.length > 1000) {\n                    targetWindow.__customConsoleBuffer.shift();\n                }\n                \n                // If CustomConsole is already initialized, add log immediately\n                if (targetWindow.__customConsoleInstance && targetWindow.__customConsoleInstance.addLogFromBuffer) {\n                    const lastLog = targetWindow.__customConsoleBuffer[targetWindow.__customConsoleBuffer.length - 1];\n                    targetWindow.__customConsoleInstance.addLogFromBuffer(lastLog);\n                }\n            };\n        };\n        \n        interceptConsole('log', targetWindow.__originalConsole.log);\n        interceptConsole('warn', targetWindow.__originalConsole.warn);\n        interceptConsole('error', targetWindow.__originalConsole.error);\n        interceptConsole('info', targetWindow.__originalConsole.info);\n        interceptConsole('debug', targetWindow.__originalConsole.debug);\n    }\n})();\n\nwindow.CustomConsole = () => {\n    // Check if we're in Tampermonkey environment\n    const isTampermonkey = typeof unsafeWindow !== 'undefined';\n    const targetWindow = isTampermonkey ? unsafeWindow : window;\n    \n    const originalLog = targetWindow.__originalConsole?.log || console.log;\n    const originalWarn = targetWindow.__originalConsole?.warn || console.warn;\n    const originalError = targetWindow.__originalConsole?.error || console.error;\n    const originalInfo = targetWindow.__originalConsole?.info || console.info;\n    const originalDebug = targetWindow.__originalConsole?.debug || console.debug;\n\n    let logs = [];\n    let isVisible = false;\n    let activeFilters = new Set(['log', 'warn', 'error', 'info', 'debug', 'result']);\n    let searchQuery = '';\n    let commandHistory = [];\n    let historyIndex = -1;\n\n    const toggleBtn = document.createElement('button');\n    toggleBtn.className = 'console-viewer-toggle';\n    toggleBtn.innerHTML = '>_';\n    toggleBtn.title = 'Toggle Console Viewer';\n    document.body.appendChild(toggleBtn);\n\n    const panel = document.createElement('div');\n    panel.className = 'console-viewer-panel hidden';\n    panel.innerHTML = `\n        <div class=\"console-viewer-toolbar\">\n            <button class=\"console-viewer-clear\">üóëÔ∏è Clear</button>\n            <div class=\"console-viewer-search\">\n                <input type=\"text\" placeholder=\"üîç Search logs...\">\n            </div>\n            <button class=\"console-viewer-filter log active\" data-type=\"log\">\n                <span class=\"filter-dot\"></span>\n            </button>\n            <button class=\"console-viewer-filter warn active\" data-type=\"warn\">\n                <span class=\"filter-dot\"></span>\n            </button>\n            <button class=\"console-viewer-filter error active\" data-type=\"error\">\n                <span class=\"filter-dot\"></span>\n            </button>\n            <button class=\"console-viewer-filter info active\" data-type=\"info\">\n                <span class=\"filter-dot\"></span>\n            </button>\n            <button class=\"console-viewer-filter debug active\" data-type=\"debug\">\n                <span class=\"filter-dot\"></span>\n            </button>\n            <button class=\"console-viewer-filter result active\" data-type=\"result\">\n                <span class=\"filter-dot\"></span>\n            </button>\n        </div>\n        <div class=\"console-viewer-logs\"></div>\n        <div class=\"console-viewer-prompt\">\n            <div class=\"console-viewer-prompt-header\">\n                <button class=\"console-viewer-prompt-toggle\">‚Üï Toggle</button>\n                <div class=\"console-viewer-prompt-controls\">\n                    <button class=\"console-viewer-run\">‚ñ∂ Run</button>\n                </div>\n            </div>\n            <textarea placeholder=\"‚Ä∫ Execute JavaScript...\" rows=\"1\"></textarea>\n        </div>\n    `;\n    document.body.appendChild(panel);\n\n    const logsContainer = panel.querySelector('.console-viewer-logs');\n    const clearBtn = panel.querySelector('.console-viewer-clear');\n    const searchInput = panel.querySelector('.console-viewer-search input');\n    const filterBtns = panel.querySelectorAll('.console-viewer-filter');\n    const promptInput = panel.querySelector('.console-viewer-prompt textarea');\n    const runBtn = panel.querySelector('.console-viewer-run');\n    const promptToggle = panel.querySelector('.console-viewer-prompt-toggle');\n    const promptContainer = panel.querySelector('.console-viewer-prompt');\n\n    toggleBtn.addEventListener('click', () => {\n        isVisible = !isVisible;\n        panel.classList.toggle('hidden', !isVisible);\n        if (isVisible) {\n            // Auto resize when panel is opened\n            setTimeout(autoResizeTextarea, 100);\n        }\n    });\n\n    clearBtn.addEventListener('click', () => {\n        logs = [];\n        renderLogs();\n    });\n\n    searchInput.addEventListener('input', (e) => {\n        searchQuery = e.target.value.toLowerCase();\n        renderLogs();\n    });\n\n    filterBtns.forEach(btn => {\n        btn.addEventListener('click', () => {\n            const { type } = btn.dataset;\n            if (activeFilters.has(type)) {\n                activeFilters.delete(type);\n                btn.classList.remove('active');\n            } else {\n                activeFilters.add(type);\n                btn.classList.add('active');\n            }\n            renderLogs();\n        });\n    });\n\n    function executeJS(code) {\n        if (!code.trim()) return;\n\n        commandHistory.unshift(code);\n        if (commandHistory.length > 50) commandHistory.pop();\n        historyIndex = -1;\n\n        logs.push({\n            type: 'info',\n            message: `‚Ä∫ ${code}`,\n            time: new Date()\n        });\n\n        try {\n            const result = eval(code);\n            logs.push({\n                type: 'result',\n                message: result !== undefined ? String(result) : 'undefined',\n                time: new Date()\n            });\n        } catch (error) {\n            logs.push({\n                type: 'error',\n                message: `Error: ${error.message}`,\n                time: new Date()\n            });\n        }\n\n        renderLogs();\n    }\n\n    runBtn.addEventListener('click', () => {\n        executeJS(promptInput.value);\n        promptInput.value = '';\n        promptInput.style.height = 'auto';\n        autoResizeTextarea();\n    });\n\n    promptInput.addEventListener('keydown', (e) => {\n        // Prevent context menu on Cmd/Ctrl + A and other keyboard shortcuts\n        if ((e.metaKey || e.ctrlKey) && (e.key === 'a' || e.key === 'c' || e.key === 'v' || e.key === 'x')) {\n            e.stopPropagation();\n        }\n\n        // Cmd/Ctrl + Enter to execute code\n        if ((e.metaKey || e.ctrlKey) && e.key === 'Enter') {\n            e.preventDefault();\n            executeJS(promptInput.value);\n            promptInput.value = '';\n            promptInput.style.height = 'auto';\n            autoResizeTextarea();\n            return;\n        }\n\n        // Shift+Enter for new line (default behavior)\n        // Arrow up/down for history navigation only when not multiline or at edges\n        if (e.key === 'ArrowUp' && !e.shiftKey) {\n            const cursorAtStart = promptInput.selectionStart === 0;\n            if (cursorAtStart && historyIndex < commandHistory.length - 1) {\n                e.preventDefault();\n                historyIndex++;\n                promptInput.value = commandHistory[historyIndex];\n                autoResizeTextarea();\n            }\n        } else if (e.key === 'ArrowDown' && !e.shiftKey) {\n            const cursorAtEnd = promptInput.selectionStart === promptInput.value.length;\n            if (cursorAtEnd) {\n                e.preventDefault();\n                if (historyIndex > 0) {\n                    historyIndex--;\n                    promptInput.value = commandHistory[historyIndex];\n                } else if (historyIndex === 0) {\n                    historyIndex = -1;\n                    promptInput.value = '';\n                }\n                autoResizeTextarea();\n            }\n        }\n    });\n\n    // Prevent context menu from appearing on keyboard shortcuts\n    promptInput.addEventListener('contextmenu', (e) => {\n        // Only prevent if it's triggered by keyboard (no mouse position)\n        if (e.clientX === 0 && e.clientY === 0) {\n            e.preventDefault();\n        }\n    });\n\n    let isPromptCollapsed = false;\n    let promptInitialHeight = 32;\n\n    function autoResizeTextarea() {\n        if (!panel.offsetHeight) return; // Panel not visible yet\n\n        const panelHeight = panel.offsetHeight;\n        const maxHeight = Math.floor(panelHeight * 0.7); // 70% of panel height\n        const minHeight = 32;\n        const threshold20Percent = Math.floor(panelHeight * 0.2); // 20% threshold\n\n        // Reset height to calculate scroll height\n        promptInput.style.height = 'auto';\n\n        // Calculate new height\n        let newHeight = Math.max(minHeight, promptInput.scrollHeight);\n\n        // Limit to max height\n        if (newHeight > maxHeight) {\n            newHeight = maxHeight;\n            promptInput.style.overflowY = 'auto';\n        } else {\n            promptInput.style.overflowY = 'hidden';\n        }\n\n        promptInput.style.height = newHeight + 'px';\n\n        // Update max-height dynamically\n        promptInput.style.maxHeight = maxHeight + 'px';\n\n        // Show/hide toggle button based on height\n        if (newHeight > threshold20Percent && !isPromptCollapsed) {\n            promptToggle.classList.add('visible');\n            promptToggle.textContent = '‚Üì Collapse';\n        } else if (isPromptCollapsed) {\n            promptToggle.classList.add('visible');\n            promptToggle.textContent = '‚Üë Expand';\n        } else {\n            promptToggle.classList.remove('visible');\n        }\n    }\n\n    promptInput.addEventListener('input', autoResizeTextarea);\n\n    // Also resize on window resize\n    window.addEventListener('resize', autoResizeTextarea);\n\n    // Utility function to escape HTML\n    function escapeHtml(text) {\n        const div = document.createElement('div');\n        div.textContent = text;\n        return div.innerHTML;\n    }\n\n    promptToggle.addEventListener('click', () => {\n        isPromptCollapsed = !isPromptCollapsed;\n\n        if (isPromptCollapsed) {\n            promptContainer.classList.add('collapsed');\n            promptToggle.textContent = '‚Üë Expand';\n            promptInput.style.height = promptInitialHeight + 'px';\n        } else {\n            promptContainer.classList.remove('collapsed');\n            promptToggle.textContent = '‚Üì Collapse';\n            autoResizeTextarea();\n        }\n    });\n\n    function addLog(type, args, timestamp = null) {\n        const processedArgs = args.map(arg => {\n            if (typeof arg === 'object' && arg !== null) {\n                return formatObject(arg);\n            }\n            return String(arg);\n        });\n\n        logs.push({\n            type,\n            message: processedArgs.join(' '),\n            time: timestamp ? new Date(timestamp) : new Date()\n        });\n\n        if (logs.length > 500) {\n            logs.shift();\n        }\n\n        renderLogs();\n    }\n\n    function formatObject(obj, visited = new WeakSet()) {\n        // Handle null dan undefined\n        if (obj === null) return '<span class=\"json-null\">null</span>';\n        if (obj === undefined) return '<span class=\"json-null\">undefined</span>';\n\n        // Handle primitives\n        const type = typeof obj;\n        if (type === 'string') return `<span class=\"json-string\">\"${escapeHtml(obj)}\"</span>`;\n        if (type === 'number') return `<span class=\"json-number\">${obj}</span>`;\n        if (type === 'boolean') return `<span class=\"json-boolean\">${obj}</span>`;\n        if (type === 'symbol') return `<span class=\"json-null\">${obj.toString()}</span>`;\n        if (type === 'bigint') return `<span class=\"json-number\">${obj}n</span>`;\n\n        // Handle functions\n        if (type === 'function') {\n            const funcStr = obj.toString();\n            const preview = funcStr.length > 50 ? funcStr.substring(0, 50) + '...' : funcStr;\n            return `<span class=\"json-null\">∆í ${obj.name || 'anonymous'}() { ${escapeHtml(preview)} }</span>`;\n        }\n\n        // Check circular reference\n        if (visited.has(obj)) {\n            return '<span class=\"json-null\">[Circular Reference]</span>';\n        }\n\n        try {\n            // Add to visited set\n            visited.add(obj);\n\n            // Handle Date\n            if (obj instanceof Date) {\n                return `<span class=\"json-string\">${obj.toISOString()}</span>`;\n            }\n\n            // Handle RegExp\n            if (obj instanceof RegExp) {\n                return `<span class=\"json-string\">${obj.toString()}</span>`;\n            }\n\n            // Handle Error\n            if (obj instanceof Error) {\n                return createJsonDisplay({\n                    name: obj.name,\n                    message: obj.message,\n                    stack: obj.stack\n                }, obj.name);\n            }\n\n            // Handle Map\n            if (obj instanceof Map) {\n                const mapObj = {};\n                let index = 0;\n                obj.forEach((value, key) => {\n                    mapObj[`${key} =>`] = value;\n                    index++;\n                });\n                return createJsonDisplay(mapObj, `Map(${obj.size})`);\n            }\n\n            // Handle Set\n            if (obj instanceof Set) {\n                const setArray = Array.from(obj);\n                return createJsonDisplay(setArray, `Set(${obj.size})`);\n            }\n\n            // Handle Array\n            if (Array.isArray(obj)) {\n                return createJsonDisplay(obj, `Array(${obj.length})`);\n            }\n\n            // Handle DOM Elements\n            if (typeof Element !== 'undefined' && obj instanceof Element) {\n                const tagName = obj.tagName ? obj.tagName.toLowerCase() : 'element';\n                const id = obj.id ? `#${obj.id}` : '';\n                const classes = obj.className ? `.${obj.className.replace(/\\s+/g, '.')}` : '';\n                return `<span class=\"json-null\">&lt;${tagName}${id}${classes}&gt;</span>`;\n            }\n\n            // Handle other DOM nodes\n            if (typeof Node !== 'undefined' && obj instanceof Node) {\n                return `<span class=\"json-null\">[${obj.constructor.name}]</span>`;\n            }\n\n            // Handle native browser objects yang tidak bisa di-serialize\n            const nativeObjectTypes = [\n                'Window', 'Document', 'HTMLDocument', 'Location', 'Navigator',\n                'Screen', 'History', 'Storage', 'Performance', 'Console',\n                'MediaDevices', 'AudioContext', 'WebGLRenderingContext',\n                'CanvasRenderingContext2D', 'XMLHttpRequest', 'WebSocket'\n            ];\n\n            const constructorName = obj.constructor?.name || '';\n            if (nativeObjectTypes.includes(constructorName) ||\n                constructorName.includes('Element') ||\n                constructorName.includes('HTML') ||\n                constructorName.includes('SVG')) {\n\n                // Extract properties yang bisa diakses\n                const safeProps = extractSafeProperties(obj, visited);\n                return createJsonDisplay(safeProps, constructorName);\n            }\n\n            // Handle ArrayBuffer dan TypedArrays\n            if (obj instanceof ArrayBuffer || ArrayBuffer.isView(obj)) {\n                const typeName = obj.constructor.name;\n                const length = obj.byteLength || obj.length || 0;\n                return `<span class=\"json-null\">${typeName}(${length})</span>`;\n            }\n\n            // Handle Promise\n            if (obj instanceof Promise) {\n                return '<span class=\"json-null\">Promise {&lt;pending&gt;}</span>';\n            }\n\n            // Handle plain objects\n            const safeObj = extractSafeProperties(obj, visited);\n            const objName = constructorName !== 'Object' ? constructorName : null;\n            return createJsonDisplay(safeObj, objName);\n\n        } catch (e) {\n            // Ultimate fallback\n            try {\n                return `<span class=\"json-null\">[${obj.constructor?.name || typeof obj}]</span>`;\n            } catch (e2) {\n                return '<span class=\"json-null\">[Object]</span>';\n            }\n        }\n    }\n\n    function extractSafeProperties(obj, visited = new WeakSet()) {\n        const props = {};\n        const maxProps = 100;\n        let count = 0;\n\n        try {\n            // Get own enumerable properties first\n            for (const prop in obj) {\n                if (count >= maxProps) {\n                    props['...'] = `more properties`;\n                    break;\n                }\n\n                try {\n                    let value = obj[prop];\n\n                    if (typeof value === 'function') {\n                        value = `[Function: ${prop}]`;\n                    } else if (typeof value === 'object' && value !== null && visited.has(value)) {\n                        value = '[Circular]';\n                    }\n\n                    props[prop] = value;\n                    count++;\n                } catch (e) {\n                    props[prop] = `[Error: ${e.message}]`;\n                    count++;\n                }\n            }\n\n            // Get own non-enumerable properties\n            const ownProps = Object.getOwnPropertyNames(obj);\n            for (const prop of ownProps) {\n                if (props.hasOwnProperty(prop) || count >= maxProps) continue;\n\n                try {\n                    const descriptor = Object.getOwnPropertyDescriptor(obj, prop);\n                    if (!descriptor) continue;\n\n                    let value;\n                    if (descriptor.get || descriptor.set) {\n                        value = '[Getter/Setter]';\n                    } else if (typeof descriptor.value === 'function') {\n                        value = `[Function: ${prop}]`;\n                    } else {\n                        try {\n                            value = obj[prop];\n                            if (typeof value === 'object' && value !== null && visited.has(value)) {\n                                value = '[Circular]';\n                            }\n                        } catch (e) {\n                            value = `[Error accessing]`;\n                        }\n                    }\n\n                    props[prop] = value;\n                    count++;\n                } catch (e) {\n                    // Skip\n                }\n            }\n\n            // Get prototype properties (methods)\n            if (count < maxProps && obj.constructor && obj.constructor.name !== 'Object') {\n                const proto = Object.getPrototypeOf(obj);\n                if (proto && proto !== Object.prototype) {\n                    const protoProps = Object.getOwnPropertyNames(proto);\n                    for (const prop of protoProps) {\n                        if (props.hasOwnProperty(prop) || count >= maxProps) continue;\n                        if (prop === 'constructor') continue;\n\n                        try {\n                            const descriptor = Object.getOwnPropertyDescriptor(proto, prop);\n                            if (!descriptor) continue;\n\n                            if (typeof descriptor.value === 'function') {\n                                props[prop] = `[Function: ${prop}]`;\n                                count++;\n                            } else if (descriptor.get || descriptor.set) {\n                                props[prop] = '[Getter/Setter]';\n                                count++;\n                            }\n                        } catch (e) {\n                            // Skip\n                        }\n                    }\n                }\n            }\n\n        } catch (e) {\n            return { error: e.message };\n        }\n\n        return props;\n    }\n\n    function createJsonDisplay(obj, objectName = null) {\n        const id = 'json_' + Date.now() + '_' + Math.random().toString(36).substr(2, 9);\n        const objId = 'obj_' + id;\n\n        // Store object reference for function execution\n        if (!window.__consoleViewerObjects) {\n            window.__consoleViewerObjects = new Map();\n        }\n        window.__consoleViewerObjects.set(objId, obj);\n\n        // Try to stringify with circular reference handling\n        let jsonString;\n        try {\n            const seen = new WeakSet();\n            jsonString = JSON.stringify(obj, (key, value) => {\n                if (typeof value === 'object' && value !== null) {\n                    if (seen.has(value)) {\n                        return '[Circular]';\n                    }\n                    seen.add(value);\n\n                    // Handle special types\n                    if (value instanceof Date) return value.toISOString();\n                    if (value instanceof RegExp) return value.toString();\n                    if (value instanceof Error) return `Error: ${value.message}`;\n                    if (typeof value.toString === 'function' &&\n                        value.toString !== Object.prototype.toString &&\n                        !Array.isArray(value)) {\n                        const str = value.toString();\n                        if (str !== '[object Object]') {\n                            return str;\n                        }\n                    }\n                }\n                if (typeof value === 'function') {\n                    return `[Function: ${value.name || 'anonymous'}]`;\n                }\n                if (typeof value === 'symbol') {\n                    return value.toString();\n                }\n                if (typeof value === 'bigint') {\n                    return value.toString() + 'n';\n                }\n                if (value === undefined) {\n                    return '[undefined]';\n                }\n                return value;\n            }, 2);\n        } catch (e) {\n            jsonString = `\"[Error formatting object: ${e.message}]\"`;\n        }\n\n        const formattedJson = syntaxHighlightJson(jsonString, objId);\n\n        const displayName = objectName || (Array.isArray(obj) ? 'Array' : 'Object');\n        const itemCount = Array.isArray(obj) ? obj.length : Object.keys(obj).length;\n\n        return `<div class=\"json-container\">\n            <div class=\"json-header\" onclick=\"toggleJson('${id}')\">\n                <span class=\"json-toggle\" id=\"toggle_${id}\">‚ñº</span>\n                <span>${displayName}(${itemCount})</span>\n            </div>\n            <div class=\"json-content\" id=\"${id}\" data-obj-id=\"${objId}\">\n                ${formattedJson}\n            </div>\n        </div>`;\n    }\n\n    function syntaxHighlightJson(json, objId) {\n        // sourcery skip: dont-reassign-parameters\n        json = json.replace(/&/g, '&amp;').replace(/</g, '&lt;').replace(/>/g, '&gt;');\n\n        const lines = json.split('\\n');\n        const highlightedLines = lines.map(line => {\n            const leadingSpaces = line.match(/^(\\s*)/)[1];\n            const content = line.trim();\n\n            if (!content) return '';\n\n            // Extract property name for function detection\n            const funcMatch = content.match(/\"([^\"]+)\":\\s*\"\\[Function:\\s*([^\\]]+)\\]\"/);\n\n            const highlighted = content.replace(/(\"(\\\\u[a-zA-Z0-9]{4}|\\\\[^u]|[^\\\\\"])*\"(\\s*:)?|\\b(true|false|null)\\b|-?\\d+(?:\\.\\d*)?(?:[eE][+\\-]?\\d+)?)/g, function (match) {\n                let cls = 'json-number';\n                if (/^\"/.test(match)) {\n                    if (/:$/.test(match)) {\n                        cls = 'json-key';\n                    } else {\n                        cls = 'json-string';\n                    }\n                } else if (/true|false/.test(match)) {\n                    cls = 'json-boolean';\n                } else if (/null/.test(match)) {\n                    cls = 'json-null';\n                }\n                return '<span class=\"' + cls + '\">' + match + '</span>';\n            }).replace(/([{}[\\],])/g, '<span class=\"json-bracket\">$1</span>');\n\n            // Make functions clickable\n            let finalHighlighted = highlighted;\n            if (funcMatch) {\n                const propName = funcMatch[1];\n                finalHighlighted = highlighted.replace(\n                    /\"\\[Function:[^\\]]+\\]\"/g,\n                    `<span class=\"json-function\" onclick=\"executeFunction('${objId}', '${propName}', this)\" style=\"cursor: pointer; text-decoration: underline;\">\"[Function: ${propName}]\"</span>`\n                );\n            } else {\n                // Also handle getter/setter\n                finalHighlighted = highlighted.replace(\n                    /\"\\[Getter\\/Setter\\]\"/g,\n                    '<span class=\"json-null\">\"[Getter/Setter]\"</span>'\n                );\n            }\n\n            const indentHtml = leadingSpaces.replace(/ /g, '&nbsp;');\n\n            return indentHtml + finalHighlighted;\n        });\n\n        return highlightedLines.join('<br>');\n    }\n\n    window.executeFunction = function (objId, propName, element) {\n        try {\n            const obj = window.__consoleViewerObjects.get(objId);\n            if (!obj) {\n                console.error('Object not found');\n                return;\n            }\n\n            const func = obj[propName];\n            if (typeof func !== 'function') {\n                console.error('Property is not a function');\n                return;\n            }\n\n            // Execute function\n            const result = func.call(obj);\n\n            // Format result\n            let resultHtml;\n            if (typeof result === 'object' && result !== null) {\n                resultHtml = formatObject(result);\n            } else {\n                resultHtml = formatObject(result);\n            }\n\n            // Replace function text with result\n            const line = element.parentElement;\n            const keyMatch = line.innerHTML.match(/<span class=\"json-key\">\"([^\"]+)\"<\\/span>/);\n            if (keyMatch) {\n                const key = keyMatch[1];\n                // Create expandable result\n                const resultId = 'result_' + Date.now() + '_' + Math.random().toString(36).substr(2, 9);\n                line.innerHTML = `<span class=\"json-key\">\"${key}\"</span><span class=\"json-bracket\">:</span> ${resultHtml}`;\n            }\n\n        } catch (e) {\n            console.error('Error executing function:', e);\n            element.innerHTML = `<span class=\"json-string\">\"[Error: ${e.message}]\"</span>`;\n        }\n    };\n\n    window.toggleJson = function (id) {\n        const content = document.getElementById(id);\n        const toggle = document.getElementById('toggle_' + id);\n        \n        if (content && toggle) {\n            if (content.style.display === 'none') {\n                content.style.display = 'block';\n                toggle.textContent = '‚ñº';\n            } else {\n                content.style.display = 'none';\n                toggle.textContent = '‚ñ∂';\n            }\n        }\n    };\n\n    function renderLogs() {\n        const filtered = logs.filter(log => {\n            const matchesFilter = activeFilters.has(log.type);\n            const matchesSearch = searchQuery === '' ||\n                log.message.toLowerCase().includes(searchQuery);\n            return matchesFilter && matchesSearch;\n        });\n\n        logsContainer.innerHTML = filtered.map(log => {\n            const timestamp = log.time.toLocaleTimeString('en-US', { \n                hour12: false, \n                hour: '2-digit', \n                minute: '2-digit', \n                second: '2-digit',\n                fractionalSecondDigits: 3\n            });\n            \n            return `\n                <div class=\"console-log-entry ${log.type}\">\n                    <span class=\"log-timestamp\">${timestamp}</span>\n                    <span class=\"log-message\">${log.message}</span>\n                </div>\n            `;\n        }).join('');\n\n        logsContainer.scrollTop = logsContainer.scrollHeight;\n    }\n\n    // Create instance methods for real-time log handling\n    const consoleInstance = {\n        addLogFromBuffer: (logEntry) => {\n            addLog(logEntry.type, logEntry.args, logEntry.timestamp);\n        }\n    };\n    \n    // Store instance reference for real-time updates\n    targetWindow.__customConsoleInstance = consoleInstance;\n    \n    // Load existing console logs from buffer\n    if (targetWindow.__customConsoleBuffer && targetWindow.__customConsoleBuffer.length > 0) {\n        targetWindow.__customConsoleBuffer.forEach(logEntry => {\n            addLog(logEntry.type, logEntry.args, logEntry.timestamp);\n        });\n    }\n    \n    // Additional fallback: try to capture recent console activity\n    // This won't capture old logs, but will ensure all new ones are caught\n    const ensureConsoleInterception = () => {\n        if (!targetWindow.__consoleIntercepted) {\n            targetWindow.__consoleIntercepted = true;\n            \n            // Double-check console interception\n            ['log', 'warn', 'error', 'info', 'debug'].forEach(method => {\n                const original = targetWindow.__originalConsole[method];\n                if (targetWindow.console[method] === original) {\n                    // Console method wasn't properly intercepted, fix it\n                    targetWindow.console[method] = function(...args) {\n                        original.apply(targetWindow.console, args);\n                        if (targetWindow.__customConsoleInstance) {\n                            targetWindow.__customConsoleInstance.addLogFromBuffer({\n                                type: method,\n                                args: args,\n                                timestamp: Date.now()\n                            });\n                        }\n                    };\n                }\n            });\n        }\n    };\n    \n    ensureConsoleInterception();\n\n    // Note: Console interception is already handled by the early initialization code above\n    // The buffer system will automatically capture new logs and add them via addLogFromBuffer\n\n    console.log('üéâ Console Viewer is ready!');\n\n    // Initial resize after a short delay to ensure panel is rendered\n    setTimeout(autoResizeTextarea, 100);\n};"],"names":["targetWindow","unsafeWindow","window","__customConsoleBuffer","__originalConsole","log","console","warn","error","info","debug","interceptConsole","type","originalMethod","args","apply","push","map","arg","JSON","parse","stringify","key","value","name","Error","message","undefined","e","String","timestamp","Date","now","time","length","shift","__customConsoleInstance","addLogFromBuffer","lastLog","CustomConsole","isTampermonkey","logs","isVisible","activeFilters","Set","searchQuery","commandHistory","historyIndex","toggleBtn","document","createElement","className","innerHTML","title","body","appendChild","panel","logsContainer","querySelector","clearBtn","searchInput","filterBtns","querySelectorAll","promptInput","runBtn","promptToggle","promptContainer","executeJS","code","trim","unshift","pop","result","eval","renderLogs","addEventListener","classList","toggle","setTimeout","autoResizeTextarea","target","toLowerCase","forEach","btn","dataset","has","delete","remove","add","style","height","metaKey","ctrlKey","stopPropagation","preventDefault","shiftKey","selectionStart","clientX","clientY","isPromptCollapsed","promptInitialHeight","offsetHeight","panelHeight","maxHeight","Math","floor","threshold20Percent","newHeight","max","scrollHeight","overflowY","textContent","escapeHtml","text","div","addLog","processedArgs","formatObject","join","obj","visited","WeakSet","toString","funcStr","preview","substring","toISOString","RegExp","createJsonDisplay","stack","Map","mapObj","index","size","Array","from","isArray","Element","tagName","id","replace","Node","constructor","nativeObjectTypes","constructorName","includes","extractSafeProperties","ArrayBuffer","isView","typeName","byteLength","Promise","safeObj","e2","props","maxProps","count","prop","ownProps","Object","getOwnPropertyNames","hasOwnProperty","descriptor","getOwnPropertyDescriptor","get","set","proto","getPrototypeOf","prototype","protoProps","objectName","random","substr","objId","jsonString","__consoleViewerObjects","seen","str","formattedJson","syntaxHighlightJson","keys","json","split","line","leadingSpaces","match","content","funcMatch","highlighted","cls","test","finalHighlighted","propName","filtered","filter","matchesFilter","matchesSearch","toLocaleTimeString","hour12","hour","minute","second","fractionalSecondDigits","scrollTop","executeFunction","element","func","call","resultHtml","parentElement","keyMatch","toggleJson","getElementById","display","consoleInstance","logEntry","ensureConsoleInterception","__consoleIntercepted","method","original"],"mappings":"2FAIA,WAEI,MACMA,EADyC,oBAAjBC,aACQA,aAAeC,OAErD,IAAKF,EAAaG,sBAAuB,CACrCH,EAAaG,sBAAwB,GAGrCH,EAAaI,kBAAoB,CAC7BC,IAAKL,EAAaM,QAAQD,IAC1BE,KAAMP,EAAaM,QAAQC,KAC3BC,MAAOR,EAAaM,QAAQE,MAC5BC,KAAMT,EAAaM,QAAQG,KAC3BC,MAAOV,EAAaM,QAAQI,OAIhC,MAAMC,EAAmB,CAACC,EAAMC,KAC5Bb,EAAaM,QAAQM,GAAQ,YAAYE,GAwCrC,GAtCAD,EAAeE,MAAMf,EAAaM,QAASQ,GAG3Cd,EAAaG,sBAAsBa,KAAK,CACpCJ,OACAE,KAAMA,EAAKG,IAAIC,IAEX,GAAmB,iBAARA,GAA4B,OAARA,EAC3B,IAEI,OAAOC,KAAKC,MAAMD,KAAKE,UAAUH,EAAK,CAACI,EAAKC,IACnB,mBAAVA,EACA,cAAcA,EAAMC,MAAQ,eAEnCD,aAAiBE,MACV,WAAWF,EAAMG,gBAEdC,IAAVJ,EACO,cAEJA,GAEf,CAAE,MAAOK,GACL,OAAOC,OAAOX,EAClB,CAEJ,OAAOA,IAEXY,UAAWC,KAAKC,MAChBC,KAAM,IAAIF,OAIV/B,EAAaG,sBAAsB+B,OAAS,KAC5ClC,EAAaG,sBAAsBgC,QAInCnC,EAAaoC,yBAA2BpC,EAAaoC,wBAAwBC,iBAAkB,CAC/F,MAAMC,EAAUtC,EAAaG,sBAAsBH,EAAaG,sBAAsB+B,OAAS,GAC/FlC,EAAaoC,wBAAwBC,iBAAiBC,EAC1D,CACJ,GAGJ3B,EAAiB,MAAOX,EAAaI,kBAAkBC,KACvDM,EAAiB,OAAQX,EAAaI,kBAAkBG,MACxDI,EAAiB,QAASX,EAAaI,kBAAkBI,OACzDG,EAAiB,OAAQX,EAAaI,kBAAkBK,MACxDE,EAAiB,QAASX,EAAaI,kBAAkBM,MAC7D,CACH,CAxED,GA0EAR,OAAOqC,cAAgB,KAEnB,MAAMC,eAAyC,oBAAjBvC,aACxBD,aAAewC,eAAiBvC,aAAeC,OAEjCF,aAAaI,mBAAmBC,KAAOC,QAAQD,IAC9CL,aAAaI,mBAAmBG,MAAQD,QAAQC,KAC/CP,aAAaI,mBAAmBI,OAASF,QAAQE,MAClDR,aAAaI,mBAAmBK,MAAQH,QAAQG,KAC/CT,aAAaI,mBAAmBM,OAASJ,QAAQI,MAEvE,IAAI+B,KAAO,GACPC,WAAY,EACZC,cAAgB,IAAIC,IAAI,CAAC,MAAO,OAAQ,QAAS,OAAQ,QAAS,WAClEC,YAAc,GACdC,eAAiB,GACjBC,cAAe,EAEnB,MAAMC,UAAYC,SAASC,cAAc,UACzCF,UAAUG,UAAY,wBACtBH,UAAUI,UAAY,KACtBJ,UAAUK,MAAQ,wBAClBJ,SAASK,KAAKC,YAAYP,WAE1B,MAAMQ,MAAQP,SAASC,cAAc,OACrCM,MAAML,UAAY,8BAClBK,MAAMJ,UAAY,irDAoClBH,SAASK,KAAKC,YAAYC,OAE1B,MAAMC,cAAgBD,MAAME,cAAc,wBACpCC,SAAWH,MAAME,cAAc,yBAC/BE,YAAcJ,MAAME,cAAc,gCAClCG,WAAaL,MAAMM,iBAAiB,0BACpCC,YAAcP,MAAME,cAAc,mCAClCM,OAASR,MAAME,cAAc,uBAC7BO,aAAeT,MAAME,cAAc,iCACnCQ,gBAAkBV,MAAME,cAAc,0BAmC5C,SAASS,UAAUC,MACf,GAAKA,KAAKC,OAAV,CAEAvB,eAAewB,QAAQF,MACnBtB,eAAeZ,OAAS,IAAIY,eAAeyB,MAC/CxB,cAAe,EAEfN,KAAKzB,KAAK,CACNJ,KAAM,OACNc,QAAS,KAAK0C,OACdnC,KAAM,IAAIF,OAGd,IACI,MAAMyC,OAASC,KAAKL,MACpB3B,KAAKzB,KAAK,CACNJ,KAAM,SACNc,aAAoBC,IAAX6C,OAAuB3C,OAAO2C,QAAU,YACjDvC,KAAM,IAAIF,MAElB,CAAE,MAAOvB,GACLiC,KAAKzB,KAAK,CACNJ,KAAM,QACNc,QAAS,UAAUlB,EAAMkB,UACzBO,KAAM,IAAIF,MAElB,CAEA2C,YA3BkB,CA4BtB,CA9DA1B,UAAU2B,iBAAiB,QAAS,KAChCjC,WAAaA,UACbc,MAAMoB,UAAUC,OAAO,UAAWnC,WAC9BA,WAEAoC,WAAWC,mBAAoB,OAIvCpB,SAASgB,iBAAiB,QAAS,KAC/BlC,KAAO,GACPiC,eAGJd,YAAYe,iBAAiB,QAAU/C,IACnCiB,YAAcjB,EAAEoD,OAAOzD,MAAM0D,cAC7BP,eAGJb,WAAWqB,QAAQC,IACfA,EAAIR,iBAAiB,QAAS,KAC1B,MAAM/D,KAAEA,GAASuE,EAAIC,QACjBzC,cAAc0C,IAAIzE,IAClB+B,cAAc2C,OAAO1E,GACrBuE,EAAIP,UAAUW,OAAO,YAErB5C,cAAc6C,IAAI5E,GAClBuE,EAAIP,UAAUY,IAAI,WAEtBd,iBAmCRV,OAAOW,iBAAiB,QAAS,KAC7BR,UAAUJ,YAAYxC,OACtBwC,YAAYxC,MAAQ,GACpBwC,YAAY0B,MAAMC,OAAS,OAC3BX,uBAGJhB,YAAYY,iBAAiB,UAAY/C,IAOrC,IALKA,EAAE+D,UAAW/D,EAAEgE,SAAuB,MAAVhE,EAAEN,KAAyB,MAAVM,EAAEN,KAAyB,MAAVM,EAAEN,KAAyB,MAAVM,EAAEN,KAClFM,EAAEiE,mBAIDjE,EAAE+D,SAAW/D,EAAEgE,UAAsB,UAAVhE,EAAEN,IAM9B,OALAM,EAAEkE,iBACF3B,UAAUJ,YAAYxC,OACtBwC,YAAYxC,MAAQ,GACpBwC,YAAY0B,MAAMC,OAAS,YAC3BX,qBAMJ,GAAc,YAAVnD,EAAEN,KAAsBM,EAAEmE,UAQvB,GAAc,cAAVnE,EAAEN,MAAwBM,EAAEmE,SAAU,CACzBhC,YAAYiC,iBAAmBjC,YAAYxC,MAAMW,SAEjEN,EAAEkE,iBACE/C,aAAe,GACfA,eACAgB,YAAYxC,MAAQuB,eAAeC,eACX,IAAjBA,eACPA,cAAe,EACfgB,YAAYxC,MAAQ,IAExBwD,qBAER,MArBwC,CACiB,IAA/BhB,YAAYiC,gBACbjD,aAAeD,eAAeZ,OAAS,IACxDN,EAAEkE,iBACF/C,eACAgB,YAAYxC,MAAQuB,eAAeC,cACnCgC,qBAER,IAiBJhB,YAAYY,iBAAiB,cAAgB/C,IAEvB,IAAdA,EAAEqE,SAA+B,IAAdrE,EAAEsE,SACrBtE,EAAEkE,mBAIV,IAAIK,mBAAoB,EACpBC,oBAAsB,GAE1B,SAASrB,qBACL,IAAKvB,MAAM6C,aAAc,OAEzB,MAAMC,EAAc9C,MAAM6C,aACpBE,EAAYC,KAAKC,MAAoB,GAAdH,GAEvBI,EAAqBF,KAAKC,MAAoB,GAAdH,GAGtCvC,YAAY0B,MAAMC,OAAS,OAG3B,IAAIiB,EAAYH,KAAKI,IAPH,GAOkB7C,YAAY8C,cAG5CF,EAAYJ,GACZI,EAAYJ,EACZxC,YAAY0B,MAAMqB,UAAY,QAE9B/C,YAAY0B,MAAMqB,UAAY,SAGlC/C,YAAY0B,MAAMC,OAASiB,EAAY,KAGvC5C,YAAY0B,MAAMc,UAAYA,EAAY,KAGtCI,EAAYD,IAAuBP,mBACnClC,aAAaW,UAAUY,IAAI,WAC3BvB,aAAa8C,YAAc,cACpBZ,mBACPlC,aAAaW,UAAUY,IAAI,WAC3BvB,aAAa8C,YAAc,YAE3B9C,aAAaW,UAAUW,OAAO,UAEtC,CAQA,SAASyB,WAAWC,GAChB,MAAMC,EAAMjE,SAASC,cAAc,OAEnC,OADAgE,EAAIH,YAAcE,EACXC,EAAI9D,SACf,CAgBA,SAAS+D,OAAOvG,EAAME,EAAMgB,EAAY,MACpC,MAAMsF,EAAgBtG,EAAKG,IAAIC,GACR,iBAARA,GAA4B,OAARA,EACpBmG,aAAanG,GAEjBW,OAAOX,IAGlBuB,KAAKzB,KAAK,CACNJ,OACAc,QAAS0F,EAAcE,KAAK,KAC5BrF,KAAMH,EAAY,IAAIC,KAAKD,GAAa,IAAIC,OAG5CU,KAAKP,OAAS,KACdO,KAAKN,QAGTuC,YACJ,CAEA,SAAS2C,aAAaE,EAAKC,EAAU,IAAIC,SAErC,GAAY,OAARF,EAAc,MAAO,sCACzB,QAAY5F,IAAR4F,EAAmB,MAAO,2CAG9B,MAAM3G,SAAc2G,EACpB,GAAa,WAAT3G,EAAmB,MAAO,8BAA8BoG,WAAWO,aACvE,GAAa,WAAT3G,EAAmB,MAAO,6BAA6B2G,WAC3D,GAAa,YAAT3G,EAAoB,MAAO,8BAA8B2G,WAC7D,GAAa,WAAT3G,EAAmB,MAAO,2BAA2B2G,EAAIG,oBAC7D,GAAa,WAAT9G,EAAmB,MAAO,6BAA6B2G,YAG3D,GAAa,aAAT3G,EAAqB,CACrB,MAAM+G,EAAUJ,EAAIG,WACdE,EAAUD,EAAQzF,OAAS,GAAKyF,EAAQE,UAAU,EAAG,IAAM,MAAQF,EACzE,MAAO,6BAA6BJ,EAAI/F,MAAQ,mBAAmBwF,WAAWY,aAClF,CAGA,GAAIJ,EAAQnC,IAAIkC,GACZ,MAAO,sDAGX,IAKI,GAHAC,EAAQhC,IAAI+B,GAGRA,aAAexF,KACf,MAAO,6BAA6BwF,EAAIO,uBAI5C,GAAIP,aAAeQ,OACf,MAAO,6BAA6BR,EAAIG,oBAI5C,GAAIH,aAAe9F,MACf,OAAOuG,kBAAkB,CACrBxG,KAAM+F,EAAI/F,KACVE,QAAS6F,EAAI7F,QACbuG,MAAOV,EAAIU,OACZV,EAAI/F,MAIX,GAAI+F,aAAeW,IAAK,CACpB,MAAMC,EAAS,CAAA,EACf,IAAIC,EAAQ,EAKZ,OAJAb,EAAIrC,QAAQ,CAAC3D,EAAOD,KAChB6G,EAAO,GAAG7G,QAAYC,EACtB6G,MAEGJ,kBAAkBG,EAAQ,OAAOZ,EAAIc,QAChD,CAGA,GAAId,aAAe3E,IAAK,CAEpB,OAAOoF,kBADUM,MAAMC,KAAKhB,GACO,OAAOA,EAAIc,QAClD,CAGA,GAAIC,MAAME,QAAQjB,GACd,OAAOS,kBAAkBT,EAAK,SAASA,EAAIrF,WAI/C,GAAuB,oBAAZuG,SAA2BlB,aAAekB,QAAS,CAC1D,MAAMC,EAAUnB,EAAImB,QAAUnB,EAAImB,QAAQzD,cAAgB,UACpD0D,EAAKpB,EAAIoB,GAAK,IAAIpB,EAAIoB,KAAO,GAEnC,MAAO,+BAA+BD,IAAUC,IADhCpB,EAAIpE,UAAY,IAAIoE,EAAIpE,UAAUyF,QAAQ,OAAQ,OAAS,eAE/E,CAGA,GAAoB,oBAATC,MAAwBtB,aAAesB,KAC9C,MAAO,4BAA4BtB,EAAIuB,YAAYtH,eAIvD,MAAMuH,EAAoB,CACtB,SAAU,WAAY,eAAgB,WAAY,YAClD,SAAU,UAAW,UAAW,cAAe,UAC/C,eAAgB,eAAgB,wBAChC,2BAA4B,iBAAkB,aAG5CC,EAAkBzB,EAAIuB,aAAatH,MAAQ,GACjD,GAAIuH,EAAkBE,SAASD,IAC3BA,EAAgBC,SAAS,YACzBD,EAAgBC,SAAS,SACzBD,EAAgBC,SAAS,OAAQ,CAIjC,OAAOjB,kBADWkB,sBAAsB3B,EAAKC,GACTwB,EACxC,CAGA,GAAIzB,aAAe4B,aAAeA,YAAYC,OAAO7B,GAAM,CACvD,MAAM8B,EAAW9B,EAAIuB,YAAYtH,KAEjC,MAAO,2BAA2B6H,KADnB9B,EAAI+B,YAAc/B,EAAIrF,QAAU,WAEnD,CAGA,GAAIqF,aAAegC,QACf,MAAO,2DAIX,MAAMC,EAAUN,sBAAsB3B,EAAKC,GAE3C,OAAOQ,kBAAkBwB,EADW,WAApBR,EAA+BA,EAAkB,KAGrE,CAAE,MAAOpH,GAEL,IACI,MAAO,4BAA4B2F,EAAIuB,aAAatH,aAAe+F,WACvE,CAAE,MAAOkC,GACL,MAAO,yCACX,CACJ,CACJ,CAEA,SAASP,sBAAsB3B,EAAKC,EAAU,IAAIC,SAC9C,MAAMiC,EAAQ,CAAA,EACRC,EAAW,IACjB,IAAIC,EAAQ,EAEZ,IAEI,IAAK,MAAMC,KAAQtC,EAAK,CACpB,GAAIqC,GAASD,EAAU,CACnBD,EAAM,OAAS,kBACf,KACJ,CAEA,IACI,IAAInI,EAAQgG,EAAIsC,GAEK,mBAAVtI,EACPA,EAAQ,cAAcsI,KACE,iBAAVtI,GAAgC,OAAVA,GAAkBiG,EAAQnC,IAAI9D,KAClEA,EAAQ,cAGZmI,EAAMG,GAAQtI,EACdqI,GACJ,CAAE,MAAOhI,GACL8H,EAAMG,GAAQ,WAAWjI,EAAEF,WAC3BkI,GACJ,CACJ,CAGA,MAAME,EAAWC,OAAOC,oBAAoBzC,GAC5C,IAAK,MAAMsC,KAAQC,EACf,KAAIJ,EAAMO,eAAeJ,IAASD,GAASD,GAE3C,IACI,MAAMO,EAAaH,OAAOI,yBAAyB5C,EAAKsC,GACxD,IAAKK,EAAY,SAEjB,IAAI3I,EACJ,GAAI2I,EAAWE,KAAOF,EAAWG,IAC7B9I,EAAQ,uBACL,GAAgC,mBAArB2I,EAAW3I,MACzBA,EAAQ,cAAcsI,UAEtB,IACItI,EAAQgG,EAAIsC,GACS,iBAAVtI,GAAgC,OAAVA,GAAkBiG,EAAQnC,IAAI9D,KAC3DA,EAAQ,aAEhB,CAAE,MAAOK,GACLL,EAAQ,mBACZ,CAGJmI,EAAMG,GAAQtI,EACdqI,GACJ,CAAE,MAAOhI,GAET,CAIJ,GAAIgI,EAAQD,GAAYpC,EAAIuB,aAAwC,WAAzBvB,EAAIuB,YAAYtH,KAAmB,CAC1E,MAAM8I,EAAQP,OAAOQ,eAAehD,GACpC,GAAI+C,GAASA,IAAUP,OAAOS,UAAW,CACrC,MAAMC,EAAaV,OAAOC,oBAAoBM,GAC9C,IAAK,MAAMT,KAAQY,EACf,KAAIf,EAAMO,eAAeJ,IAASD,GAASD,IAC9B,gBAATE,EAEJ,IACI,MAAMK,EAAaH,OAAOI,yBAAyBG,EAAOT,GAC1D,IAAKK,EAAY,SAEe,mBAArBA,EAAW3I,OAClBmI,EAAMG,GAAQ,cAAcA,KAC5BD,MACOM,EAAWE,KAAOF,EAAWG,OACpCX,EAAMG,GAAQ,kBACdD,IAER,CAAE,MAAOhI,GAET,CAER,CACJ,CAEJ,CAAE,MAAOA,GACL,MAAO,CAAEpB,MAAOoB,EAAEF,QACtB,CAEA,OAAOgI,CACX,CAEA,SAAS1B,kBAAkBT,EAAKmD,EAAa,MACzC,MAAM/B,EAAK,QAAU5G,KAAKC,MAAQ,IAAMwE,KAAKmE,SAASjD,SAAS,IAAIkD,OAAO,EAAG,GACvEC,EAAQ,OAASlC,EASvB,IAAImC,EANC5K,OAAO6K,yBACR7K,OAAO6K,uBAAyB,IAAI7C,KAExChI,OAAO6K,uBAAuBV,IAAIQ,EAAOtD,GAIzC,IACI,MAAMyD,EAAO,IAAIvD,QACjBqD,EAAa3J,KAAKE,UAAUkG,EAAK,CAACjG,EAAKC,KACnC,GAAqB,iBAAVA,GAAgC,OAAVA,EAAgB,CAC7C,GAAIyJ,EAAK3F,IAAI9D,GACT,MAAO,aAKX,GAHAyJ,EAAKxF,IAAIjE,GAGLA,aAAiBQ,KAAM,OAAOR,EAAMuG,cACxC,GAAIvG,aAAiBwG,OAAQ,OAAOxG,EAAMmG,WAC1C,GAAInG,aAAiBE,MAAO,MAAO,UAAUF,EAAMG,UACnD,GAA8B,mBAAnBH,EAAMmG,UACbnG,EAAMmG,WAAaqC,OAAOS,UAAU9C,WACnCY,MAAME,QAAQjH,GAAQ,CACvB,MAAM0J,EAAM1J,EAAMmG,WAClB,GAAY,oBAARuD,EACA,OAAOA,CAEf,CACJ,CACA,MAAqB,mBAAV1J,EACA,cAAcA,EAAMC,MAAQ,eAElB,iBAAVD,EACAA,EAAMmG,WAEI,iBAAVnG,EACAA,EAAMmG,WAAa,SAEhB/F,IAAVJ,EACO,cAEJA,GACR,EACP,CAAE,MAAOK,GACLkJ,EAAa,8BAA8BlJ,EAAEF,WACjD,CAEA,MAAMwJ,EAAgBC,oBAAoBL,EAAYD,GAKtD,MAAO,2FAC6ClC,+DACLA,sCAL3B+B,IAAepC,MAAME,QAAQjB,GAAO,QAAU,aAChDe,MAAME,QAAQjB,GAAOA,EAAIrF,OAAS6H,OAAOqB,KAAK7D,GAAKrF,iFAOjCyG,mBAAoBkC,wBAC9CK,uCAGd,CAEA,SAASC,oBAAoBE,EAAMR,GAmD/B,OAjDAQ,EAAOA,EAAKzC,QAAQ,KAAM,SAASA,QAAQ,KAAM,QAAQA,QAAQ,KAAM,SAEpD0C,MAAM,MACMrK,IAAIsK,IAC/B,MAAMC,EAAgBD,EAAKE,MAAM,UAAU,GACrCC,EAAUH,EAAKlH,OAErB,IAAKqH,EAAS,MAAO,GAGrB,MAAMC,EAAYD,EAAQD,MAAM,2CAE1BG,EAAcF,EAAQ9C,QAAQ,yGAA0G,SAAU6C,GACpJ,IAAII,EAAM,cAYV,MAXI,KAAKC,KAAKL,GAENI,EADA,KAAKC,KAAKL,GACJ,WAEA,cAEH,aAAaK,KAAKL,GACzBI,EAAM,eACC,OAAOC,KAAKL,KACnBI,EAAM,aAEH,gBAAkBA,EAAM,KAAOJ,EAAQ,SAClD,GAAG7C,QAAQ,cAAe,wCAG1B,IAAImD,EAAmBH,EACvB,GAAID,EAAW,CACX,MAAMK,EAAWL,EAAU,GAC3BI,EAAmBH,EAAYhD,QAC3B,yBACA,yDAAyDiC,QAAYmB,+EAAsFA,aAEnK,MAEID,EAAmBH,EAAYhD,QAC3B,wBACA,oDAMR,OAFmB4C,EAAc5C,QAAQ,KAAM,UAE3BmD,IAGAzE,KAAK,OACjC,CA0DA,SAAS5C,aACL,MAAMuH,EAAWxJ,KAAKyJ,OAAO7L,IACzB,MAAM8L,EAAgBxJ,cAAc0C,IAAIhF,EAAIO,MACtCwL,EAAgC,KAAhBvJ,aAClBxC,EAAIqB,QAAQuD,cAAcgE,SAASpG,aACvC,OAAOsJ,GAAiBC,IAG5B3I,cAAcL,UAAY6I,EAAShL,IAAIZ,IACnC,MAAMyB,EAAYzB,EAAI4B,KAAKoK,mBAAmB,QAAS,CACnDC,QAAQ,EACRC,KAAM,UACNC,OAAQ,UACRC,OAAQ,UACRC,uBAAwB,IAG5B,MAAO,mDAC6BrM,EAAIO,2DACFkB,2DACFzB,EAAIqB,yDAGzC4F,KAAK,IAER7D,cAAckJ,UAAYlJ,cAAcoD,YAC5C,CA5dA9C,YAAYY,iBAAiB,QAASI,oBAGtC7E,OAAOyE,iBAAiB,SAAUI,oBASlCd,aAAaU,iBAAiB,QAAS,KACnCwB,mBAAqBA,kBAEjBA,mBACAjC,gBAAgBU,UAAUY,IAAI,aAC9BvB,aAAa8C,YAAc,WAC3BhD,YAAY0B,MAAMC,OAASU,oBAAsB,OAEjDlC,gBAAgBU,UAAUW,OAAO,aACjCtB,aAAa8C,YAAc,aAC3BhC,wBAoXR7E,OAAO0M,gBAAkB,SAAU/B,EAAOmB,EAAUa,GAChD,IACI,MAAMtF,EAAMrH,OAAO6K,uBAAuBX,IAAIS,GAC9C,IAAKtD,EAED,YADAjH,QAAQE,MAAM,oBAIlB,MAAMsM,EAAOvF,EAAIyE,GACjB,GAAoB,mBAATc,EAEP,YADAxM,QAAQE,MAAM,8BAKlB,MAAMgE,EAASsI,EAAKC,KAAKxF,GAGzB,IAAIyF,EAEAA,EAAa3F,aAAa7C,GAM9B,MAAM+G,EAAOsB,EAAQI,cACfC,EAAW3B,EAAKnI,UAAUqI,MAAM,4CACtC,GAAIyB,EAAU,CACV,MAAM5L,EAAM4L,EAAS,GAEQnL,KAAKC,MAAcwE,KAAKmE,SAASjD,SAAS,IAAIkD,OAAO,EAAG,GACrFW,EAAKnI,UAAY,2BAA2B9B,gDAAkD0L,GAClG,CAEJ,CAAE,MAAOpL,GACLtB,QAAQE,MAAM,4BAA6BoB,GAC3CiL,EAAQzJ,UAAY,sCAAsCxB,EAAEF,kBAChE,CACJ,EAEAxB,OAAOiN,WAAa,SAAUxE,GAC1B,MAAM+C,EAAUzI,SAASmK,eAAezE,GAClC9D,EAAS5B,SAASmK,eAAe,UAAYzE,GAE/C+C,GAAW7G,IACmB,SAA1B6G,EAAQjG,MAAM4H,SACd3B,EAAQjG,MAAM4H,QAAU,QACxBxI,EAAOkC,YAAc,MAErB2E,EAAQjG,MAAM4H,QAAU,OACxBxI,EAAOkC,YAAc,KAGjC,EA+BA,MAAMuG,gBAAkB,CACpBjL,iBAAmBkL,IACfpG,OAAOoG,EAAS3M,KAAM2M,EAASzM,KAAMyM,EAASzL,aAKtD9B,aAAaoC,wBAA0BkL,gBAGnCtN,aAAaG,uBAAyBH,aAAaG,sBAAsB+B,OAAS,GAClFlC,aAAaG,sBAAsB+E,QAAQqI,IACvCpG,OAAOoG,EAAS3M,KAAM2M,EAASzM,KAAMyM,EAASzL,aAMtD,MAAM0L,0BAA4B,KACzBxN,aAAayN,uBACdzN,aAAayN,sBAAuB,EAGpC,CAAC,MAAO,OAAQ,QAAS,OAAQ,SAASvI,QAAQwI,IAC9C,MAAMC,EAAW3N,aAAaI,kBAAkBsN,GAC5C1N,aAAaM,QAAQoN,KAAYC,IAEjC3N,aAAaM,QAAQoN,GAAU,YAAY5M,GACvC6M,EAAS5M,MAAMf,aAAaM,QAASQ,GACjCd,aAAaoC,yBACbpC,aAAaoC,wBAAwBC,iBAAiB,CAClDzB,KAAM8M,EACN5M,KAAMA,EACNgB,UAAWC,KAAKC,OAG5B,OAMhBwL,4BAKAlN,QAAQD,IAAI,+BAGZyE,WAAWC,mBAAoB"}
!function(e){"function"==typeof define&&define.amd?define(e):e()}(function(){"use strict";if(!window.__customConsoleBuffer){window.__customConsoleBuffer=[],window.__originalConsole={log:console.log,warn:console.warn,error:console.error,info:console.info,debug:console.debug};const e=(e,t)=>{console[e]=function(...n){t.apply(console,n),window.__customConsoleBuffer.push({type:e,args:n.map(e=>{if("object"==typeof e&&null!==e)try{return JSON.parse(JSON.stringify(e))}catch(t){return String(e)}return e}),timestamp:Date.now(),time:new Date}),window.__customConsoleBuffer.length>1e3&&window.__customConsoleBuffer.shift()}};e("log",window.__originalConsole.log),e("warn",window.__originalConsole.warn),e("error",window.__originalConsole.error),e("info",window.__originalConsole.info),e("debug",window.__originalConsole.debug)}window.CustomConsole=()=>{const originalLog=window.__originalConsole.log,originalWarn=window.__originalConsole.warn,originalError=window.__originalConsole.error,originalInfo=window.__originalConsole.info,originalDebug=window.__originalConsole.debug;let logs=[],isVisible=!1,activeFilters=new Set(["log","warn","error","info","debug","result"]),searchQuery="",commandHistory=[],historyIndex=-1;const toggleBtn=document.createElement("button");toggleBtn.className="console-viewer-toggle",toggleBtn.innerHTML=">_",toggleBtn.title="Toggle Console Viewer",document.body.appendChild(toggleBtn);const panel=document.createElement("div");panel.className="console-viewer-panel hidden",panel.innerHTML='\n        <div class="console-viewer-toolbar">\n            <button class="console-viewer-clear">üóëÔ∏è Clear</button>\n            <div class="console-viewer-search">\n                <input type="text" placeholder="üîç Search logs...">\n            </div>\n            <button class="console-viewer-filter log active" data-type="log">\n                <span class="filter-dot"></span>\n            </button>\n            <button class="console-viewer-filter warn active" data-type="warn">\n                <span class="filter-dot"></span>\n            </button>\n            <button class="console-viewer-filter error active" data-type="error">\n                <span class="filter-dot"></span>\n            </button>\n            <button class="console-viewer-filter info active" data-type="info">\n                <span class="filter-dot"></span>\n            </button>\n            <button class="console-viewer-filter debug active" data-type="debug">\n                <span class="filter-dot"></span>\n            </button>\n            <button class="console-viewer-filter result active" data-type="result">\n                <span class="filter-dot"></span>\n            </button>\n        </div>\n        <div class="console-viewer-logs"></div>\n        <div class="console-viewer-prompt">\n            <div class="console-viewer-prompt-header">\n                <button class="console-viewer-prompt-toggle">‚Üï Toggle</button>\n                <div class="console-viewer-prompt-controls">\n                    <button class="console-viewer-run">‚ñ∂ Run</button>\n                </div>\n            </div>\n            <textarea placeholder="‚Ä∫ Execute JavaScript..." rows="1"></textarea>\n        </div>\n    ',document.body.appendChild(panel);const logsContainer=panel.querySelector(".console-viewer-logs"),clearBtn=panel.querySelector(".console-viewer-clear"),searchInput=panel.querySelector(".console-viewer-search input"),filterBtns=panel.querySelectorAll(".console-viewer-filter"),promptInput=panel.querySelector(".console-viewer-prompt textarea"),runBtn=panel.querySelector(".console-viewer-run"),promptToggle=panel.querySelector(".console-viewer-prompt-toggle"),promptContainer=panel.querySelector(".console-viewer-prompt");function executeJS(code){if(code.trim()){commandHistory.unshift(code),commandHistory.length>50&&commandHistory.pop(),historyIndex=-1,logs.push({type:"info",message:`‚Ä∫ ${code}`,time:new Date});try{const result=eval(code);logs.push({type:"result",message:void 0!==result?String(result):"undefined",time:new Date})}catch(e){logs.push({type:"error",message:`Error: ${e.message}`,time:new Date})}renderLogs()}}toggleBtn.addEventListener("click",()=>{isVisible=!isVisible,panel.classList.toggle("hidden",!isVisible),isVisible&&setTimeout(autoResizeTextarea,100)}),clearBtn.addEventListener("click",()=>{logs=[],renderLogs()}),searchInput.addEventListener("input",e=>{searchQuery=e.target.value.toLowerCase(),renderLogs()}),filterBtns.forEach(e=>{e.addEventListener("click",()=>{const{type:t}=e.dataset;activeFilters.has(t)?(activeFilters.delete(t),e.classList.remove("active")):(activeFilters.add(t),e.classList.add("active")),renderLogs()})}),runBtn.addEventListener("click",()=>{executeJS(promptInput.value),promptInput.value="",promptInput.style.height="auto",autoResizeTextarea()}),promptInput.addEventListener("keydown",e=>{if(!e.metaKey&&!e.ctrlKey||"a"!==e.key&&"c"!==e.key&&"v"!==e.key&&"x"!==e.key||e.stopPropagation(),(e.metaKey||e.ctrlKey)&&"Enter"===e.key)return e.preventDefault(),executeJS(promptInput.value),promptInput.value="",promptInput.style.height="auto",void autoResizeTextarea();if("ArrowUp"!==e.key||e.shiftKey){if("ArrowDown"===e.key&&!e.shiftKey){promptInput.selectionStart===promptInput.value.length&&(e.preventDefault(),historyIndex>0?(historyIndex--,promptInput.value=commandHistory[historyIndex]):0===historyIndex&&(historyIndex=-1,promptInput.value=""),autoResizeTextarea())}}else{0===promptInput.selectionStart&&historyIndex<commandHistory.length-1&&(e.preventDefault(),historyIndex++,promptInput.value=commandHistory[historyIndex],autoResizeTextarea())}}),promptInput.addEventListener("contextmenu",e=>{0===e.clientX&&0===e.clientY&&e.preventDefault()});let isPromptCollapsed=!1,promptInitialHeight=32;function autoResizeTextarea(){if(!panel.offsetHeight)return;const e=panel.offsetHeight,t=Math.floor(.7*e),n=Math.floor(.2*e);promptInput.style.height="auto";let o=Math.max(32,promptInput.scrollHeight);o>t?(o=t,promptInput.style.overflowY="auto"):promptInput.style.overflowY="hidden",promptInput.style.height=o+"px",promptInput.style.maxHeight=t+"px",o>n&&!isPromptCollapsed?(promptToggle.classList.add("visible"),promptToggle.textContent="‚Üì Collapse"):isPromptCollapsed?(promptToggle.classList.add("visible"),promptToggle.textContent="‚Üë Expand"):promptToggle.classList.remove("visible")}function escapeHtml(e){const t=document.createElement("div");return t.textContent=e,t.innerHTML}function addLog(e,t,n=null){const o=t.map(e=>"object"==typeof e&&null!==e?formatObject(e):String(e));logs.push({type:e,message:o.join(" "),time:n?new Date(n):new Date}),logs.length>500&&logs.shift(),renderLogs()}function formatObject(e,t=new WeakSet){if(null===e)return'<span class="json-null">null</span>';if(void 0===e)return'<span class="json-null">undefined</span>';const n=typeof e;if("string"===n)return`<span class="json-string">"${escapeHtml(e)}"</span>`;if("number"===n)return`<span class="json-number">${e}</span>`;if("boolean"===n)return`<span class="json-boolean">${e}</span>`;if("symbol"===n)return`<span class="json-null">${e.toString()}</span>`;if("bigint"===n)return`<span class="json-number">${e}n</span>`;if("function"===n){const t=e.toString(),n=t.length>50?t.substring(0,50)+"...":t;return`<span class="json-null">∆í ${e.name||"anonymous"}() { ${escapeHtml(n)} }</span>`}if(t.has(e))return'<span class="json-null">[Circular Reference]</span>';try{if(t.add(e),e instanceof Date)return`<span class="json-string">${e.toISOString()}</span>`;if(e instanceof RegExp)return`<span class="json-string">${e.toString()}</span>`;if(e instanceof Error)return createJsonDisplay({name:e.name,message:e.message,stack:e.stack},e.name);if(e instanceof Map){const t={};let n=0;return e.forEach((e,o)=>{t[`${o} =>`]=e,n++}),createJsonDisplay(t,`Map(${e.size})`)}if(e instanceof Set){return createJsonDisplay(Array.from(e),`Set(${e.size})`)}if(Array.isArray(e))return createJsonDisplay(e,`Array(${e.length})`);if("undefined"!=typeof Element&&e instanceof Element){const t=e.tagName?e.tagName.toLowerCase():"element",n=e.id?`#${e.id}`:"";return`<span class="json-null">&lt;${t}${n}${e.className?`.${e.className.replace(/\s+/g,".")}`:""}&gt;</span>`}if("undefined"!=typeof Node&&e instanceof Node)return`<span class="json-null">[${e.constructor.name}]</span>`;const n=["Window","Document","HTMLDocument","Location","Navigator","Screen","History","Storage","Performance","Console","MediaDevices","AudioContext","WebGLRenderingContext","CanvasRenderingContext2D","XMLHttpRequest","WebSocket"],o=e.constructor?.name||"";if(n.includes(o)||o.includes("Element")||o.includes("HTML")||o.includes("SVG")){return createJsonDisplay(extractSafeProperties(e,t),o)}if(e instanceof ArrayBuffer||ArrayBuffer.isView(e)){const t=e.constructor.name;return`<span class="json-null">${t}(${e.byteLength||e.length||0})</span>`}if(e instanceof Promise)return'<span class="json-null">Promise {&lt;pending&gt;}</span>';const s=extractSafeProperties(e,t);return createJsonDisplay(s,"Object"!==o?o:null)}catch(t){try{return`<span class="json-null">[${e.constructor?.name||typeof e}]</span>`}catch(e){return'<span class="json-null">[Object]</span>'}}}function extractSafeProperties(e,t=new WeakSet){const n={},o=100;let s=0;try{for(const r in e){if(s>=o){n["..."]="more properties";break}try{let o=e[r];"function"==typeof o?o=`[Function: ${r}]`:"object"==typeof o&&null!==o&&t.has(o)&&(o="[Circular]"),n[r]=o,s++}catch(e){n[r]=`[Error: ${e.message}]`,s++}}const r=Object.getOwnPropertyNames(e);for(const a of r)if(!(n.hasOwnProperty(a)||s>=o))try{const o=Object.getOwnPropertyDescriptor(e,a);if(!o)continue;let r;if(o.get||o.set)r="[Getter/Setter]";else if("function"==typeof o.value)r=`[Function: ${a}]`;else try{r=e[a],"object"==typeof r&&null!==r&&t.has(r)&&(r="[Circular]")}catch(e){r="[Error accessing]"}n[a]=r,s++}catch(e){}if(s<o&&e.constructor&&"Object"!==e.constructor.name){const t=Object.getPrototypeOf(e);if(t&&t!==Object.prototype){const e=Object.getOwnPropertyNames(t);for(const r of e)if(!(n.hasOwnProperty(r)||s>=o)&&"constructor"!==r)try{const e=Object.getOwnPropertyDescriptor(t,r);if(!e)continue;"function"==typeof e.value?(n[r]=`[Function: ${r}]`,s++):(e.get||e.set)&&(n[r]="[Getter/Setter]",s++)}catch(e){}}}}catch(e){return{error:e.message}}return n}function createJsonDisplay(e,t=null){const n="json_"+Date.now()+"_"+Math.random().toString(36).substr(2,9),o="obj_"+n;let s;window.__consoleViewerObjects||(window.__consoleViewerObjects=new Map),window.__consoleViewerObjects.set(o,e);try{const t=new WeakSet;s=JSON.stringify(e,(e,n)=>{if("object"==typeof n&&null!==n){if(t.has(n))return"[Circular]";if(t.add(n),n instanceof Date)return n.toISOString();if(n instanceof RegExp)return n.toString();if(n instanceof Error)return`Error: ${n.message}`;if("function"==typeof n.toString&&n.toString!==Object.prototype.toString&&!Array.isArray(n)){const e=n.toString();if("[object Object]"!==e)return e}}return"function"==typeof n?`[Function: ${n.name||"anonymous"}]`:"symbol"==typeof n?n.toString():"bigint"==typeof n?n.toString()+"n":void 0===n?"[undefined]":n},2)}catch(e){s=`"[Error formatting object: ${e.message}]"`}const r=syntaxHighlightJson(s,o);return`<div class="json-container">\n            <div class="json-header" onclick="toggleJson('${n}')">\n                <span class="json-toggle" id="toggle_${n}">‚ñº</span>\n                <span>${t||(Array.isArray(e)?"Array":"Object")}(${Array.isArray(e)?e.length:Object.keys(e).length})</span>\n            </div>\n            <div class="json-content" id="${n}" data-obj-id="${o}">\n                ${r}\n            </div>\n        </div>`}function syntaxHighlightJson(e,t){return(e=e.replace(/&/g,"&amp;").replace(/</g,"&lt;").replace(/>/g,"&gt;")).split("\n").map(e=>{const n=e.match(/^(\s*)/)[1],o=e.trim();if(!o)return"";const s=o.match(/"([^"]+)":\s*"\[Function:\s*([^\]]+)\]"/),r=o.replace(/("(\\u[a-zA-Z0-9]{4}|\\[^u]|[^\\"])*"(\s*:)?|\b(true|false|null)\b|-?\d+(?:\.\d*)?(?:[eE][+\-]?\d+)?)/g,function(e){let t="json-number";return/^"/.test(e)?t=/:$/.test(e)?"json-key":"json-string":/true|false/.test(e)?t="json-boolean":/null/.test(e)&&(t="json-null"),'<span class="'+t+'">'+e+"</span>"}).replace(/([{}[\],])/g,'<span class="json-bracket">$1</span>');let a=r;if(s){const e=s[1];a=r.replace(/"\[Function:[^\]]+\]"/g,`<span class="json-function" onclick="executeFunction('${t}', '${e}', this)" style="cursor: pointer; text-decoration: underline;">"[Function: ${e}]"</span>`)}else a=r.replace(/"\[Getter\/Setter\]"/g,'<span class="json-null">"[Getter/Setter]"</span>');return n.replace(/ /g,"&nbsp;")+a}).join("<br>")}function renderLogs(){const e=logs.filter(e=>{const t=activeFilters.has(e.type),n=""===searchQuery||e.message.toLowerCase().includes(searchQuery);return t&&n});logsContainer.innerHTML=e.map(e=>{const t=e.time.toLocaleTimeString("en-US",{hour12:!1,hour:"2-digit",minute:"2-digit",second:"2-digit",fractionalSecondDigits:3});return`\n                <div class="console-log-entry ${e.type}">\n                    <span class="log-timestamp">${t}</span>\n                    <span class="log-message">${e.message}</span>\n                </div>\n            `}).join(""),logsContainer.scrollTop=logsContainer.scrollHeight}promptInput.addEventListener("input",autoResizeTextarea),window.addEventListener("resize",autoResizeTextarea),promptToggle.addEventListener("click",()=>{isPromptCollapsed=!isPromptCollapsed,isPromptCollapsed?(promptContainer.classList.add("collapsed"),promptToggle.textContent="‚Üë Expand",promptInput.style.height=promptInitialHeight+"px"):(promptContainer.classList.remove("collapsed"),promptToggle.textContent="‚Üì Collapse",autoResizeTextarea())}),window.executeFunction=function(e,t,n){try{const o=window.__consoleViewerObjects.get(e);if(!o)return void console.error("Object not found");const s=o[t];if("function"!=typeof s)return void console.error("Property is not a function");const r=s.call(o);let a;a=formatObject(r);const i=n.parentElement,l=i.innerHTML.match(/<span class="json-key">"([^"]+)"<\/span>/);if(l){const e=l[1];Date.now(),Math.random().toString(36).substr(2,9);i.innerHTML=`<span class="json-key">"${e}"</span><span class="json-bracket">:</span> ${a}`}}catch(e){console.error("Error executing function:",e),n.innerHTML=`<span class="json-string">"[Error: ${e.message}]"</span>`}},window.toggleJson=function(e){const t=document.getElementById(e),n=document.getElementById("toggle_"+e);t&&n&&("none"===t.style.display?(t.style.display="block",n.textContent="‚ñº"):(t.style.display="none",n.textContent="‚ñ∂"))},window.__customConsoleBuffer&&window.__customConsoleBuffer.length>0&&window.__customConsoleBuffer.forEach(e=>{addLog(e.type,e.args,e.timestamp)});const updateConsoleInterception=()=>{console.log=function(...e){originalLog.apply(console,e),addLog("log",e)},console.warn=function(...e){originalWarn.apply(console,e),addLog("warn",e)},console.error=function(...e){originalError.apply(console,e),addLog("error",e)},console.info=function(...e){originalInfo.apply(console,e),addLog("info",e)},console.debug=function(...e){originalDebug.apply(console,e),addLog("debug",e)}};updateConsoleInterception(),console.log("üéâ Console Viewer is ready!"),setTimeout(autoResizeTextarea,100)}});
//# sourceMappingURL=custom-console.min.js.map
